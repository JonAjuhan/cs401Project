task TSpell
{
	FLASH;
	PlaySE(SPELLTHING);
	SpellSanae;
	let amount = 3;
	loop(30)
	{
		SetCommonData("StateFaceShake",amount);
		amount-=3/30;
		yield;
	}
	SetCommonData("StateFaceShake",0);
}
task FLASH
{
	let obj = ObjPrim_Create(OBJ_PRIMITIVE_2D);
	ObjPrim_SetTexture(obj,IMG_WHITECIRCLE_L);
	ObjPrim_SetPrimitiveType(obj, PRIMITIVE_TRIANGLEFAN);
	ObjPrim_SetVertexCount(obj, 4);
	Obj_SetRenderPriorityI(obj,42);
	ObjRender_SetAngleZ(obj,0);
	let ALF=0;
	ObjRender_SetAlpha(obj,ALF);
	let scale =10;
	ObjRender_SetScaleXYZ(obj,scale,scale,scale);
	ObjPrim_SetDestCenter(obj,0,0,512,512);
	loop(20)
	{
		ObjRender_SetPosition(obj,GetPlayerX,GetPlayerY,0);
		ObjRender_SetAlpha(obj,ALF);
		ALF+=255/20;
		yield;
	}
	loop(20)
	{
		ObjRender_SetPosition(obj,GetPlayerX,GetPlayerY,0);
		ObjRender_SetAlpha(obj,ALF);
		ALF-=255/20;
		yield;
	}
	Obj_Delete(obj);
}
task SpellSanae
{ 

	let SPELLS = 0;
	OnSpell=true;
	//SetPlayerSpeed(1.0,0.4);
	SetPlayerInvincibilityFrame_Special(345);//無敵時間を設定
	let objManage = GetSpellManageObject();
	Obj_Delete(objManage);
	

	

	let SparkAngle=270;
	DARKNESS(0,0,0,BLEND_ALPHA,128,4,345);

	let XING = -30;
	let YING = -30;
	Cross((GetStgFrameWidth/6)*1,YING,90,51,190,153,0.1);
	Cross((GetStgFrameWidth/6)*1,YING,90,255,255,255,0.02);
	loop(10){yield;}
	Cross(XING,GetStgFrameHeight/5,0,64,162,223,0.1);
	Cross(XING,GetStgFrameHeight/5,0,255,255,255,0.02);
	loop(10){yield;}
	Cross((GetStgFrameWidth/6)*2,YING,90,254,204,47,0.1);
	Cross((GetStgFrameWidth/6)*2,YING,90,255,255,255,0.02);
	loop(10){yield;}
	Cross(XING,(GetStgFrameHeight/5)*2,0,179,193,35,0.1);
	Cross(XING,(GetStgFrameHeight/5)*2,0,255,255,255,0.02);
	loop(10){yield;}
	Cross((GetStgFrameWidth/6)*3,YING,90,244,100,30,0.1);
	Cross((GetStgFrameWidth/6)*3,YING,90,255,255,255,0.02);
	loop(10){yield;}
	Cross(XING,(GetStgFrameHeight/5)*3,0,248,162,39,0.1);
	Cross(XING,(GetStgFrameHeight/5)*3,0,255,255,255,0.02);
	loop(10){yield;}
	Cross((GetStgFrameWidth/6)*4,YING,90,238,101,121,0.1);
	Cross((GetStgFrameWidth/6)*4,YING,90,255,255,255,0.02);
	loop(10){yield;}
	Cross(XING,(GetStgFrameHeight/5)*4,0,219,55,58,0.1);
	Cross(XING,(GetStgFrameHeight/5)*4,0,255,255,255,0.02);
	loop(10){yield;}
	Cross((GetStgFrameWidth/6)*5,YING,90,163,100,217,0.1);
	Cross((GetStgFrameWidth/6)*5,YING,90,255,255,255,0.02);
	loop(20){yield;}

	SPELLS=1;
	loop(235){
	CollectAllItems;
	yield;
	}
	OnSpell=false;
	//SetPlayerSpeed(5.0,2.0);

	task Cross(x,y,angleT,R,G,B,yp1){
	PlaySE(SANAESLICE);
	let obj = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjRender_SetBlendType(obj, BLEND_ADD_ARGB);
	ObjPrim_SetTexture(obj,IMG_SNAKE);
	ObjRender_SetPosition(obj,x,y,0);
	ObjRender_SetAngleZ(obj,angleT);
	ObjSprite2D_SetSourceRect(obj, 0, 0, 256/2, 32);
	ObjSprite2D_SetDestRect(obj, -256, -32, 256, 32);
	ObjRender_SetColor(obj,R,G,B);	
	
	RENDERING(obj);
	let exrate = 0.15;
	if(x==-30){
		exrate=0.157;
	}
	let Xpand = 0;
	loop(20)
	{
		ObjRender_SetScaleXYZ(obj,Xpand,0.3,1);
		if(R!=255&&G!=255&&B!=255)
		{
			loop(2)
			{
				Blur(x+(256*Xpand)*cos(angleT),y+(256*Xpand)*sin(angleT),angleT,60,1,[R,G,B]);
			}
		}
		Xpand+=exrate;
		yield;
	}
	
	let Ypand=0.3;
	while(SPELLS==0){yield;}
	PUFF(obj,x,y,angleT,R,G,B,Xpand);
	let objspell = ObjSpell_Create();
	ObjSpell_Regist(objspell);
	ObjSpell_SetEraseShot(objspell,true);
	ObjSpell_SetDamage(objspell, 4/2);
	PlaySE(SANAESHOCK);
	let c = 0;
	loop(10)
	{
		if(R!=255&&G!=255&&B!=255&&c%5==0)
		{
			let am = rand(1,2);
			PUFF(obj,x,y,angleT+rand(10,-10),R/am,G/am,B/am,Xpand);
		}
		c++;
		ObjSpell_SetIntersectionLine(objspell,x,y,x+900*cos(angleT),y+900*sin(angleT),30);
		
		ObjRender_SetScaleXYZ(obj,Xpand,Ypand,1);
		Ypand+=yp1;
		yield;
	}
	loop(200)
	{
		if(R!=255&&G!=255&&B!=255&&c%5==0)
		{
			let am = rand(1,2);
			PUFF(obj,x,y,angleT+rand(10,-10),R/am,G/am,B/am,Xpand);
		}
		c++;
		ObjSpell_SetIntersectionLine(objspell,x,y,x+900*cos(angleT),y+900*sin(angleT),30);
		yield;
	}
	let maxer = Ypand;
	loop(10)
	{
		ObjSpell_SetIntersectionLine(objspell,x,y,x+900*cos(angleT),y+900*sin(angleT),30);
		
		ObjRender_SetScaleXYZ(obj,Xpand,Ypand,1);
		Ypand-=maxer/10;
		yield;
	}
	Obj_Delete(obj);
	Obj_Delete(objspell);
	}
	task RENDERING(obj){
		let tic = 1;
		while(!Obj_IsDeleted(obj))
		{
			ObjSprite2D_SetSourceRect(obj, 0, 32*(tic-1), 256, 32*tic);
			tic++;
			if(tic>4){tic=1;}
			loop(4)
			{
				yield;
			}
		}
	}
	task PUFF(obj,x,y,angleT,R,G,B,Xpand)
	{
		let obj2 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjRender_SetBlendType(obj2, BLEND_ADD_ARGB);
		ObjPrim_SetTexture(obj2,IMG_SNAKE);
		ObjRender_SetPosition(obj2,x,y,0);
		ObjRender_SetAngleZ(obj2,angleT);
		ObjSprite2D_SetSourceRect(obj2, 0, 0, 256, 32);
		ObjSprite2D_SetDestRect(obj2, -256, -32, 256, 32);
		ObjRender_SetColor(obj2,R,G,B);	
		ObjRender_SetScaleXYZ(obj2,Xpand,0.3,1);
		let ALFA = 255;
		let SCALER = Xpand;
		let SCALERY = 0.3;
		RENDERING(obj2);
		loop(50){
			ObjRender_SetAlpha(obj2,ALFA/3);
			ObjRender_SetScaleXYZ(obj2,Xpand,SCALERY,1);
			ALFA-=255/50;
			SCALERY+=0.1;
			yield;
		}
		Obj_Delete(obj2);
	}
	task Blur(x,y,angl,stayer,scaler2,color)
	{
		let obj2 = ObjPrim_Create(OBJ_PRIMITIVE_2D);
		ObjPrim_SetTexture(obj2,IMG_STAR);
		ObjPrim_SetPrimitiveType(obj2, PRIMITIVE_TRIANGLEFAN);
		ObjPrim_SetVertexCount(obj2, 4);
		ObjRender_SetBlendType(obj2, BLEND_ADD_ARGB);
		Obj_SetRenderPriorityI(obj2,40);
		ObjRender_SetAngleZ(obj2,0);
	
		ObjPrim_SetDestCenter(obj2,0,0,64,64);

		ObjRender_SetPosition(obj2,x,y,0);
		let Scale2 = 1;
		ObjRender_SetAngleZ(obj2,rand(0,360));
		let ang = angl+180+rand(20,-20);
		ObjRender_SetColor(obj2,color[0],color[1],color[2]);
		let rspin = rand(4,-4);
		let alf = 255;
		let spd = rand(1,7);
		loop(stayer-15)
		{	
			ObjRender_SetAngleZ(obj2,ObjRender_GetAngleZ(obj2)+rspin);
			ObjRender_SetPosition(obj2,x,y,0);
			x+=spd*cos(ang);
			y+=spd*sin(ang);
			ObjRender_SetScaleXYZ(obj2,Scale2*scaler2,Scale2*scaler2,Scale2*scaler2);
			ObjRender_SetAlpha(obj2,alf);
			alf-=255/stayer;
			Scale2+=0.5/stayer;
			yield;
			
		}
		loop(15)
		{	
			ObjRender_SetAngleZ(obj2,ObjRender_GetAngleZ(obj2)+rspin);
			ObjRender_SetPosition(obj2,x,y,0);
			x+=spd*cos(ang);
			y+=spd*sin(ang);
			ObjRender_SetScaleXYZ(obj2,Scale2*scaler2,Scale2*scaler2,Scale2*scaler2);
			ObjRender_SetAlpha(obj2,alf);
			alf-=255/stayer;
			Scale2-=0.5/15;
			yield;
			
		}
		Obj_Delete(obj2);
	}
}