#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Brod Single 3"]
#Text["series 7: scales with difficulty"]
#BGM["./bgm/bgm - Deaf to All but the Song.ogg"]//"./bgm/bgm - Kid's Festival ~ Innocent Treasures.ogg"] // CC-CGR-loop.ogg"]
#System["./system/Andi_System.txt"]
#Background["./system/Background/Mystia/BG_work.txt"]

#include "./Index.txt"

let timer = 37; //37 //47
let drate = 24; //24
let mlife = 2000; //2000

@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){				SetScriptResult(mlife);		}
	case(EV_REQUEST_SPELL_SCORE){		SetScriptResult(5000000);	}
	case(EV_REQUEST_TIMER) {			SetScriptResult(timer*60);	}
	case(EV_REQUEST_IS_DURABLE_SPELL) {	SetScriptResult(false);		}
}
@Initialize{
	if(noPlural){	SetDifficultyD(HARD); }
	alternative(rank)
	case(RANK_EASY){	SetCommonData("CurrentSC","Bird Sign \"Tune of Insufficient Light\"");}
	case(RANK_NORM){	SetCommonData("CurrentSC","Vocal Sign \"Twilight Sparrow\"");}
	case(RANK_HARD){	SetCommonData("CurrentSC","Vocal Sign \"Midnight Sparrow's Song\"");}
	others         {	SetCommonData("CurrentSC","Night Sparrow \"Darkest Hour\"");}

	SetShotAutoDeleteClip(32,32,32,32);

	// boss = spawnBoss();
	boss = spawnBossBlank("Mystia Lorelai");
	renderMystiaIN(boss,1);

	MainTask;


}
@MainLoop{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		DropItemsSpellEnd;
		TBreakSpell([]);
	}
	else {
		SetBossHitbox(boss,ex,ey);
	}
	frame++;
	yield;
}


task MainTask {
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, cx, cy-100, 60); //cy-120

	wait(45);

	// SetSpellCard;
	SetSpellCardA2(NAZRIN,dirlib~"Cutin/Cutin_Mystia.png");


	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760

	//SetCaution;
	// TSpellImmune;
	Aura(boss,255,64,255,64);
	SetMagicCircleAlpha(64,64);

	wait(90);

	Tmovement(cx-120,cx+120, cy-90,cy-60, 60,240, [MOVE_PLAYERBIAS,2,0,MOVE_LIMITSPEED,1.5] );
	ObjEnemy_SetDamageRate(boss,drate,drate/3);
	frame = 0;

	AimShot;
}


task AimShot{
	let shot;
	let shot1;
	let angle;
	let N;
	let spd;
	let aspd;

	let diff = rank();
	alternative(diff)
	case(RANK_EASY){	N = 8; spd = 1.5; aspd = 0.20;}
	case(RANK_NORM){	N = 11; spd = 1.75; aspd = 0.25;}
	case(RANK_HARD){	N = 15; spd = 2; aspd = 0.30;}
	case(RANK_LUNA){	N = 20; spd = 2.25; aspd = 0.35;}

	while(!Obj_IsDeleted(boss) && !finishing){
		ascent(j in -1..N)
		{
			shot = CreateShotA1(ex,ey,spd,90,SUPP_RED+500,1);
			shot1 = CreateShotA1(ex,ey,spd,45,SUPP_RED+500,1);
			ObjMove_SetAngularVelocity(shot,aspd*j);
			ObjMove_AddPatternA1(shot,300,2,90);
			ObjMove_SetAngularVelocity(shot1,aspd*-j);
			ObjMove_AddPatternA1(shot1,300,2,90);
		}
		wait(75);
	}
}
