
//================================================================
//大域設定値
//Texture
sampler sampler0_ : register(s0);

//--------------------------------
float power_;	// ゆがみ量
float seed_;	// 乱数っぽくする


//================================================================
//--------------------------------
//ピクセルシェーダ入力値
struct PS_INPUT
{
	float4 diffuse : COLOR0;  //ディフューズ色
	float2 texCoord : TEXCOORD0; //テクスチャ座標
	float2 vPos : VPOS; //描画先座標
};

//--------------------------------
//ピクセルシェーダ出力値
struct PS_OUTPUT
{
	float4 color : COLOR0; //出力色
};


//================================================================
// シェーダ
//--------------------------------
//ピクセルシェーダ
PS_OUTPUT PsNoise( PS_INPUT In ) : COLOR0
{
	PS_OUTPUT Out;

	//--------------------------------
	float2 texUV = In.texCoord;
	texUV.x += (fmod(pow(seed_%128+texUV.y, 2), 0.01f) - 0.005f)*power_;

	//--------------------------------
	//テクスチャの色
	float4 colorTexture = tex2D(sampler0_, texUV);

	//頂点ディフーズ色
	float4 colorDiffuse = In.diffuse;

	//合成
	float4 color = colorTexture * colorDiffuse;

	Out.color = color;

	return Out;
}


//================================================================
//--------------------------------
//technique
technique TecNoise
{
	pass P0
	{
		PixelShader = compile ps_3_0 PsNoise();
	}
}

