#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Galaxy \"Himiko of 40 Billion Suns\""]
#Text["series 7: scales with difficulty"]
#BGM["./bgm/bgm - Kid's Festival ~ Innocent Treasures.ogg"]
#System["./system/Andi_System.txt"]
#Background["./system/Background/Mystia/BG_work.txt"]

#include "./Index.txt"

let timer = 37; //37 //47
let drate = 24; //24
let mlife = 2000; //2000

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){				SetScriptResult(mlife);		}
	case(EV_REQUEST_SPELL_SCORE){		SetScriptResult(5000000);	}
	case(EV_REQUEST_TIMER) {			SetScriptResult(timer*60);	}
	case(EV_REQUEST_IS_DURABLE_SPELL) {	SetScriptResult(true);		}
}
@Initialize
{
	if(noPlural){	SetDifficultyD(HARD); }
	alternative(rank)
	case(RANK_EASY){	SetCommonData("CurrentSC","Aurora \"Heavenly Walls of the Sky\"");}
	case(RANK_NORM){	SetCommonData("CurrentSC","Aurora \"Heavenly Walls of the Sky\"");}
	case(RANK_HARD){	SetCommonData("CurrentSC","Galaxy \"Himiko of 40 Billion Suns\"");}
	others         {	SetCommonData("CurrentSC","Galaxy \"Himiko of 40 Billion Suns\"");}
	
	SetShotAutoDeleteClip(192,32,192,128);
	
	boss = spawnBoss();
	// boss = spawnBossBlank("Mystia Lorelai");
	// renderMystiaIN(boss,1);
	
	MainTask;
	

}
@MainLoop{
	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing){
		finishing = true;
		DropItemsSpellEnd;
		TBreakSpell([]);
	}
	SetBossHitbox(boss,ex,ey);
	frame++;
	yield;
}


task MainTask {
	ObjEnemy_SetDamageRate(boss,0,0);
	// ObjEnemy_SetDamageRate(boss,drate,drate/3);
	ObjMove_SetDestAtFrame(boss, cx, cy-100, 60); //cy-120
	
	// SetSpellCard;
	SetSurvivalCard;
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760
	
	// SetCaution;
	// TSpellImmune;
	SetBossBlur(true);
	Aura(boss,255,64,255,64);
	AuraRainbow(boss,64,64,64);
	SetMagicCircleAlpha(64,64);

	wait(90);
	
		
	// Tmovement(cx-120,cx+120, cy-90,cy-60, 60,240, [MOVE_PLAYERBIAS,2,0,MOVE_MAXSPEED,1.5] );
	ObjEnemy_SetDamageRate(boss,drate,drate/3);
	frame = 0;
	
	
	TShoot;
	
}




task TShoot{
	wait(60);

	let shot; 
	
	let N; let M; let da; let freq;
	let swooces;  //5
	let diff = rank();	
	alternative(diff)
	case(RANK_EASY){	N = 3; M = 11; da = 60; swooces = 1; freq=3; }
	case(RANK_NORM){	N = 5; M =  7; da = 45; swooces = 1; freq=2; }
	case(RANK_HARD){	N = 5; M =  5; da = 45; swooces = 1; freq=2; }
	case(RANK_LUNA){	N = 7; M =  7; da = 35; swooces = 1; freq=1; }
	others{N=11;M=11;da=25;swooces=10;}
	// let shootinterval = 90/N; //total of 30 frames, in N intervals
	
	let a; let dir; let a0 = 180;
	let x; let y;
	
	let count = 0;
	let waittime = 60; //30
	
	while(!Obj_IsDeleted(boss) && !finishing){
		
		loop{
			// OM_SetDestAtWrapF(boss,px,py,[LFT,TOP,RGT,BTM,NON,2],90);
			// OM_SetDestAtWrapF(boss,px,py,[LFT,TOP,RGT,BTM,3],90);
			x=px; y=py;
			// OM_SetDestAtWrapF(boss,x,y,[LFT,TOP,RGT,BTM,swooces,0.1],90);
			OM_SetDestAtWrapF(boss,x,y,[LFT,TOP,RGT,BTM,1,0.1],90);
			
			// let N = 5; let a0 = 180; let da = 45; //2,180,120
			ascent(f in 0..90){
				if(f%freq==0){
					ascent(i in -trunc((N-1)/2)..trunc((N-1)/2)+1){
						// let shot = CreateShotA2(ex,ey,0,ObjMove_GetAngle(boss)+a0+da*i, 0.05, 3, FLOWDOT+f%GRAY+500, 5);
						// OM_BounceA1(shot,1,[LFT,TOP,RGT,BTM]);
						// let shot = CreateShotA2(ex,ey,0,ObjMove_GetAngle(boss)+a0+da*i, 0.05, 3, GALE+500, 5);
						// let shot = CreateShotA2(ex,ey,0,ObjMove_GetAngle(boss)+a0+da*i, 0.05, 2.85, BALL_PURPLE+randBin*(MAGENTA-PURPLE)+500, 5);
						
						let shot = CreateShotA2(ex,ey,0,ObjMove_GetAngle(boss)+a0+da*i, 0.05, 2.85, GALE+500, 5);
						
						// OR_SetColor(shot,255,64,255);
						// OR_SetColor(shot,128+128*cos(f),64+128*sin(f),255);
						OR_SetColor(shot,128+128*cos(f),64+128*sin(f),255);
						OR_SetScale(shot,(rand(0.5,1))^0.25);
						if(f/freq%M==0){MyBurst(shot,f/freq/M);} //%3
						
						task MyBurst(shot0,f){
							loop(30){yield;}if(Obj_IsDeleted(shot0)){return;}
							while(!isOffScreen(shot0)){yield;}
							let x = OM_GetX(shot0); let y = OM_GetY(shot0); 
							let x1 = ex; let y1 = ey;
							let a = getangle(x,y,x1,y1)+rand(-5,5);
							let dist = getdist(x,y,x1,y1);
							// let s = 6; let acc = -0.075; let ms = 0.5; //2.5,0.1,6
							let t = 60*dist/200;
							let s = 2*(dist-rand(0,50))/t;
							let ms = 0; let acc = (ms-s)/t;
							// t = ProjectFrame(s,acc,ms,dist);
							
							let shot = CreateShotA2(x,y,s,a, acc, ms, ARROW_PURPLE+500-1*f%3, 0);
							// let shot = CreateShotA2(x,y,s,a, acc, ms, NOTE_TSUKU_PURPLE+500-1*f%3, 0);
							// let shot = CreateShotA2(x,y,s,a, acc, ms, ORB_PURPLE+500-1*f%3, 0);
							Obj_SetRenderPriorityI(shot,GetShotRenderPriorityI-0.01);
							ObjShot_SetDeleteFrame(shot,t);
							
							SE_Play(se_kira01,60);
							ObjShot_SetDeleteFrame(shot0,0);
							
							ObjShot_SetIntersectionEnable(shot,false);
							wait(15);
							ObjShot_SetIntersectionEnable(shot,true);
						}
						
					}
				}
				if(f%3==0){SE_Play(se_chime,60);SE_Play(se_shot,40);}
				// EffectParticleA1(x,y,1,rand(0,360),"feather",128,128,128);
				yield;
			}
			// wait(waittime*((50-count)/50)^2);
			wait(waittime*(((timer-5)*60-frame)/(timer*60))^0.5);
			count++;
		}
			
	}	
}


