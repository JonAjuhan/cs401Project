#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["(Satori & Koishi Spell 2a)"]
#Text["series 7: scales with difficulty"]

#System["./system/Andi_System.txt"]
#Background["./system/Background/Satori/BG_work.txt"]

#include "./Index.txt"

let timer = 47; //37 //47
let drate = 48; //24
let mlife = 4000; //2000
let issurv = false;

let volumetweak = 1; //.75

let bsatori;
let bkoishi;
let kx; let ky;

let colorS = [255, 64,196];
let colorK = [128,255,128];

@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE){				SetScriptResult(mlife);		}
	case(EV_REQUEST_SPELL_SCORE){		SetScriptResult(5000000);	}
	case(EV_REQUEST_TIMER) {			SetScriptResult(timer*60);	}
	case(EV_REQUEST_IS_DURABLE_SPELL) {	SetScriptResult(issurv);	}
}
@Initialize{
	if(noPlural){ 
		SetDifficultyD(HARD);
		SetBGM("Hartmann's Youkai Girl@Magnum Opus"); 
	}
	alternative(rank)
	case(RANK_EASY){	SetCommonData("CurrentSC", "Recollection \"Subterranean Nova\"");}
	case(RANK_NORM){	SetCommonData("CurrentSC", "Recollection \"Subterranean Nova\"");}
	case(RANK_HARD){	SetCommonData("CurrentSC", "Recollection \"Subterranean Nova\"");}
	others         {	SetCommonData("CurrentSC", "Recollection \"Subterranean Nova\"");}
	alternative(rank)
	case(RANK_EASY){	SetCommonData("CurrentSC2","Image \"Omiwatari Daisy Chain\"");}
	case(RANK_NORM){	SetCommonData("CurrentSC2","Image \"Omiwatari Daisy Chain\"");}
	case(RANK_HARD){	SetCommonData("CurrentSC2","Image \"Omiwatari Daisy Chain\"");}
	others         {	SetCommonData("CurrentSC2","Image \"Omiwatari Daisy Chain\"");}
	
	SetShotAutoDeleteClip(64,96,64,32);
	
	SetCommonData("BossNameColor",[255,64,196]);
	bsatori = CreateBoss("Satori Komeiji");
	SetCommonData("BossNameColor",[128,255,128]);
	bkoishi = CreateBoss("Koishi Komeiji");
	ObjMove_SetPosition(bkoishi,GetCommonData("Boss2_X",cy),GetCommonData("Boss2_Y",-120));
	renderSatoriSA(bsatori);
	renderKoishiSA(bkoishi);
	
	MainTask;
	

}
@MainLoop{
	if(ObjEnemy_GetInfo(bsatori,INFO_LIFE)<=0 && !finishing){
		finishing = true;
		DropItemsSpellEnd;
		SetCommonData("Boss2_X",ObjMove_GetX(bkoishi));	SetCommonData("Boss2_Y",ObjMove_GetY(bkoishi));
		TBreakSpell([]);
	}
	kx=ObjMove_GetX(bkoishi); ky=ObjMove_GetY(bkoishi);
	SetBossHitbox(bsatori,ex,ey);
	SetBossHitbox(bkoishi,kx,ky);
	frame++;
	yield;
}


task MainTask {
	ObjEnemy_SetDamageRate(bsatori,0,0);
	// ObjMove_SetDestAtFrame(bsatori, cx, cy-100, 60); //cy-120
	ObjMove_SetDestAtFrame(bsatori, cx, cy-60, 60); //cy-120
	ObjMove_SetDestAtFrame(bkoishi, cx*1.1, cy-150, 60); //cy-120
	
	yield;

	// SetSpellCardA1(1, [255,64,196], NAZRIN, dircut~"Cutin_Satori.png");
	SetSpellCardA1(2, [128,255,128], NAZRIN, dircut~"Cutin_Koishi.png");
	
	
	
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760
	
	// SetCaution;
	// TSpellImmune;
	// SetBossBlur(true);
	Aura(bsatori,255,64,128,64);
	// Aura(bkoishi,64,255,128,64);
	
	// AuraRainbow(boss,64,64,64);
	// SetMagicCircleAlpha(64,64);

	// wait(90);
	wait(20);
	
	// Tmovement(cx-120,cx+120, cy-90,cy-60, 60,240, [MOVE_PLAYERBIAS,2,0,MOVE_MAXSPEED,1.5] );
	ObjEnemy_SetDamageRate(bsatori,drate,drate/3);
	frame = 0;
	
	
	// TShootSatori;
	TShootKoishi;
	
}





task TShootKoishi{
	
	let N; let spd; let R; let r; let del; let del2;
	alternative(rank)
	case(RANK_EASY){ N = 6;  spd = 1;   R = 150; r = 10; del = 6; del2 = 420; } //N=8/8/12/12
	case(RANK_NORM){ N = 7;  spd = 1;   R = 150; r = 10; del = 6; del2 = 420; }
	case(RANK_HARD){ N = 8;  spd = 1.5; R = 150; r = 10; del = 6; del2 = 420; }
	case(RANK_LUNA){ N = 12; spd = 2;   R = 150; r = 10; del = 6; del2 = 420; }
	let da = 360/N;
	
	wait(45);
	// SetSpellCardA1(2, [128,255,128], NAZRIN, dircut~"Cutin_Koishi.png");
	
	
	
	
	while(!Obj_IsDeleted(bkoishi)&&!finishing){
		O_SetPropertyAtFrame(bkoishi,RENDER_ALPHA,0,  120);
		O_SetPropertyAtDelay(bkoishi,FLAG_INTERSECTION,false,60);
		wait(120);
		
		OM_SetDestAtWrapF(bkoishi,px,py/2,[LFT,RGT,1,1.5,2.25,0.75],60);
		wait(45);
		O_SetPropertyAtFrame(bkoishi,RENDER_ALPHA,255,60);
		O_SetPropertyAtDelay(bkoishi,FLAG_INTERSECTION,true,60);
		wait(30);
		
		let dir = sign(kx-cx);
		SetPose(bkoishi,10*del);
		
		let petals   = [PEL_WHITE   , PEL_YELLOW   , PEL_MAGENTA  , PEL_RED       ];
		let corollas = [BALL_YELLOW , BALL_ORANGE  , BALL_WHITE   , BALL_YELLOW   ];
		let colors = [ [255,255,150], [255,192, 64], [255,150,255], [255, 64, 64] ];
		
		ascent(j in 0..10){
			let A = 90+270/10*j*dir;
			let x = kx+R*cos(A); let y = ky+R*sin(A);
			
			let a0=rand(0,360);
			let type = randint(0,length(petals)-1);
			
			let c = colors[type];
			loop(5){
				EffectParticleA2(kx,ky,R/30,A+rand(-15,15),"HEART",30,0,0.5,c[0],c[1],c[2]);
			}
			
			let dx = px-x;
			let shot0 = ShotB2(x,y, 0,-2, 0,0.05, dx/100,3, corollas[type], 30+DELAY_RING);
			XAim(shot0,x+dx*rand(0.95,1.05),60);
			let toss = dx/cx;
			OS_TintShot(shot0,255);
			
			task XAim(shot,x1,t){
				wait(30);
				let x0=OM_GetX(shot);
				let dx = x1-x0;
				let x=x0; let xp=x0; let s;
				
				let y1 = (OM_GetY(shot)+py+ky)/3;
				
				ObjMove_SetDestAtWeight(shot,x1,y1,t,t/6);
				wait(t);
				ObjMove_AddPatternB2(shot,0,NO_CHANGE,NO_CHANGE,0,0.05, OM_GetSpeedX(shot),2.5);
				return;
			}
			
			let shots = [];
			ascent(i in 0..N){
				let a = a0+i*da;
				let shot = ShotA1(x+r*cos(a),y+r*sin(a),0,a, petals[type], 30+DELAY_RING);
				ObjShot_SetSpellResist(shot,true);
				Obj_SetValue(shot,"IsPetal",true);
				// Obj_SetRenderPriorityI(shot,PRI_SHOT+1);
				shots = shots~[shot];
			}
			TFlower(shot0,shots,r,3*toss);
			task TFlower(shot0,shots,r,da){
				while(!Obj_IsDeleted(shot0) && !isoffW(shot0,false,false,false,true)){
					let a = OM_GetAngle(shot0);
					let s = OM_GetSpeed(shot0);
					let x = ObjMove_GetX(shot0)+s*cos(a);
					let y = ObjMove_GetY(shot0)+s*sin(a);
					ascent(i in 0..length(shots)){
						let shot = shots[i];
						let a = ObjMove_GetAngle(shot);
						a+=da;
						ObjMove_SetAngle(shot,a);
						ObjMove_SetX(shot,x+r*cos(a));
						ObjMove_SetY(shot,y+r*sin(a));
					}
					yield;
				}
				SE_Play(se_paf,50);
				ascent(i in 0..length(shots)){
					let shot = shots[i];
					if(!Obj_IsDeleted(shot) && Obj_GetValueD(shot,"IsPetal",false)){
						// ObjMove_SetSpeed(shot,2);
						ObjShot_SetSpellResist(shot,false);
						ObjShot_SetAutoDelete(shot,false);
						
						let a = OM_GetAngle(shot);
						let s = 6; //3
						let dx = s*cos(a);
						let dy = s*sin(a);
						ObjMove_AddPatternB2(shot,0,dx,dy, -dx/360,-dy/180, dx/3,2);
						
						MyBounce(shot);
					}
				}
			}
			
			
			SE_Play(se_chime,100);
			SE_Play(se_chime2,100);
			wait(del);
		}		
		wait(del2);
		ExplodeShots;
		// SE_Play(se_nyaa,100);
	}
}










task MyBounce(obj){
	let n = 0; let x=-999999;let y=-999999;let a0=OM_GetAngle(obj);
	
	let al0 = OR_GetAlpha(obj);
	let al1 = rand(64,128);
	let dal = (al1-al0)/10;
	
	OS_SetIntersectionEnable(obj,false);
	ascent(i in 0..10){
		OR_SetAlpha(obj,al0+dal*i);
		yield;
	}
	
	// OR_SetAlpha(obj,rand(64,128)); //64
	// ObjShot_SetGraphic(obj,HEART_YELLOW);
	// OR_SetScale(obj,0.5);
	
	while(isoff(obj)){yield;}
	let x0 = OM_GetX(obj); let y0 = OM_GetY(obj);
	while(!isoff(obj)){yield;}
	x=OM_GetX(obj); y=OM_GetY(obj); let a=OM_GetAngle(obj);
	if(y>=sy){return;}
	// a = a+(0 + getadist(a,a0) + getadist(a,getangle(x,y,cx,cy)) )/3;
	// a = a+(0 + getadist(a,getangle(x,y,cx,cy)) )/2;
	// a = getangle(x,y,(x0+cx)/2,(y0+cy)/2);
	// a = getangle(x,y,x0,(y0+cy)/2);
	a = getangle(x,y,x0,ky);
	

	x0=x; y0=y; a0=a;
	let w = 28; //42
	let las = CreateStraightLaserA1(x,y,a0,800,w,60,LAS_WHITE,99961);
	ObjStLaser_SetSource(las,false);
	O_SetRenderPriorityI(las,PRI_SHOT-5);
	let c = OS_GetDelayColor(obj);
	OR_SetColor(las,c[0]*3,c[1]*3,c[2]*3);
	let id = OS_GetID(obj);
	let cc = GetShotColor(id);

	Obj_Delete(obj);
	SE_Play(se_kira01,40);
	descent(i in 0..30){
		WarnShotA1(x+rand(-10,10),y+rand(-10,10),cc,15*(i/30)^0.5);
		ObjStLaser_SetAngle(las,a0+rand(-0.5,0.5)*((30-i)/30)^0.5);
		ObjLaser_SetLength(las,800-800*i/30);
		yield;
	}
	SE_Play(se_laser1,60);

	let N = 15; //15
	//Burst from source that gets promptly deleted
	// ascent(i in 0..N){
		// let s0 = 3+4*i/N;
		// let s1 = 2+2*i/N;
		// let ac = (s1-s0)/rand(45,75);
		
		// let shot = ShotA2(x+rand(-10,10),y+rand(-10,10),s0,a+180+rporm(5),ac,s1, ZPEL_WHITE+i%16, 20+DELAY_RING);
		// ObjShot_SetDeleteFrame(shot,rand(1,10));
	// }
	N=rand(20,30); //30
	descent(i in 0..N){
		ObjMove_SetPosition(las,x0+rporm(2),y0+rporm(2));
		ObjStLaser_SetAngle(las,a0+rand(-0.5,0.5));
		// ObjLaser_SetIntersectionWidth(las,12*(i/30)^0.5);
		ObjRender_SetAlpha(las,255*(i/N)^(1/8));
		
		x = x0+800*(1-i/N)*cos(a0);
		y = y0+800*(1-i/N)*sin(a0);
		// a = a0+720*(1-i/N);
		// a = getangle(kx,ky,x,y);
		if(!isPoffC(x,y,0-16,0-16,sx+16,sy+16)){
			DeleteShotInCircle(TYPE_SHOT,TYPE_IMMEDIATE,x,y,10*GetShotCount(TYPE_ENEMY)/1000); //
			a = getangle(ex,ey,x,y);
			// let shot = ShotA2(x,y,0,a,0.05,2, ZPEL_WHITE+i%16, 5+DELAY_RING);
			// let shot = ShotA2(x,y,0,a,0.05,2, id-PEL+ZPEL, 5+DELAY_RING);
			let shot = ShotA2(x,y,0,a,0.05,2, id, 5+DELAY_RING);
			SE_Play(se_kira02,60);
			
			CheckShot(shot,30);
			if(Obj_IsDeleted(shot)){return;}
			
			MyBounce2(shot);
			task MyBounce2(shot){
				while(!bounce(shot)){yield;}
				SE_Play(se_chime,40);
			}
			
			// let dist = getdist(ex,ey,x,y);
			// let las2 = CreateStraightLaserA1(ex,ey,a,dist,12,10,LAS_WHITE,99961);
			// OR_SetColorArr(las2,OS_GetDelayColor(shot));
			// task Lesbiabs(las,a0){
				// descent(i in 0..10){
					// ObjRender_SetAlpha(las,255*(i/10)^0.5);
					// ObjStLaser_SetAngle(las,a0+rporm(0.5));
					// yield;
				// }
				// Obj_Delete(las);
			// }Lesbiabs(las2,a);
		}
		
		yield;
	}
	Obj_Delete(las);
	// Obj_FadeDelete(las);
}




let didexplode = false;

task ExplodeShots{
	if(!didexplode){
		SetSpellCardA1(1, [255,64,196], NAZRIN, dircut~"Cutin_Satori.png");
		didexplode = true;
	}
	
	let del = 90;
	let r = 25; //30
	let types = [BALL_O_RED,BALL_O_MAGENTA,BALL_O_BLUE,BALL_O_PURPLE];
	let shots = GetAllShotID;
		
	SetPose(bsatori,del);
	SE_Play(se_timestop,60);
	ascent(i in 0..length(shots)){
		let shot = shots[i];
		TStill(shot,i);
		task TStill(shot,i){
			OS_SetSpellResist(shot,true);
			OM_Still(shot,30);
			let del2 = randint(30,45);
			wait(del2);
			OS_TintShot(shot,128);
			let a = OR_GetAngleZ(shot);
			ascent(i in 0..10){
				OR_SetAngleZ(shot,a+i*72);
				yield;
			}
			ObjShot_SetGraphic(shot, types[i%4]);
			OS_Tremble(shot,2,2,del-del2-10);
		}
	}
	SE_Play(se_charge, 120);
	SE_Play(se_charge2,120);
	EffectBurstInB2(bsatori,quality,del, 5,"MAPLE", 255,64,196);
	EffectBurstInB2(bsatori,quality,del, 5,"MAPLE", 128,32, 98);
	wait(del);
	
	SE_Play(se_explode,120);
	
	shots = GetAllShotID;
	ascent(i in 0..length(shots)){
		let shot = shots[i];
		let x = OM_GetX(shot); let y = OM_GetY(shot); let a = OM_GetAngle(shot);
		let c = OS_GetDelayColor(shot);
		Obj_Delete(shot);
		
		ascent(j in 0..2){
			let sun = CreateSunShotA2(x,y,0,a, "GROW", 0, r/128/(15+15*j), r/128, true, c[0],c[1],c[2]);
			Manage(sun);
			task Manage(sun){
				wait(30);
				Obj_SetValue(sun,"DeleteTime",30);
				Obj_SetValue(sun,"Delete","Fade");
			}
		}
	}
	
}







task TShootTest{
	let a = 0;
	
	while(!Obj_IsDeleted(bsatori)){
		
		// let evhash = Notify(SCRIPT_ITEM, EV_SPAWN_ITEM, [ I_EXTEND, ex,ey, ex,ey-30 ]);
		// Debug(0,GetShotCount(TYPE_ENEMY));
		// yield;
		// let item = GetEventResult(evhash);
		let dx=rand(-5,5); let dy=rand(-3,-2);
		
		let s=sqrt(dx^2+dy^2);
		let xya=atan2(dy,dx);
		// let item = CreateShotA1(ex,ey,s,a,ZPEL_YELLOW,0);
		
		
		// let delay = 30;   //20+15*sin(frame*5)
		let delay = DELAY_RING+30;   //20+15*sin(frame*5)
		// let delay = 20+15*sin(frame*5);
		let r = 50+50*sin(frame*5);
		let x = ex+r*cos(a);
		let y = ey+r*sin(a);
		a += r^2/100;
		
		ascent(i in 0..1){ //3
			let shot = ShotA1(x,y,s,a+120*i,ZPEL_YELLOW,delay);
			
			OM_SetAngularVelocity(shot,0.1*dx);
			OR_SetColor(shot,255,0,255);
			MyBounce(shot);
		}
		
		
		
		// SE_Play(se_split,60);
		SE_Play(se_chime,60);
		// wait(60);
		// wait(6);
		wait(6);
		
	}
}
