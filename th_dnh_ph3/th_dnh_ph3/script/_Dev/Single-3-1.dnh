#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Inferno \"Reward Professed by the Hateful\""]
#Text["..."] 
#BGM["./bgm/Solar Sect of Mystic Wisdom ~ Nuclear Fusion.mp3"]	//#BGM["./bgm - Last Word.ogg"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Stars.txt"]

#include "./Index.txt"


 

let type0 = 210;
let type1 = 212;
let type2 = 216;



@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	 //case(EV_REQUEST_IS_DURABLE_SPELL) {
		// SetScriptResult(true);
	 //}
	case(EV_REQUEST_TIMER) { SetScriptResult(4500); }
}
@Initialize
{
	SetCommonData("CurrentSC","Inferno \"Reward Professed by the Hateful\"");
	SetCommonData("Difficulty","\"Hard\"");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(16,64,16,16);
	
	EnemyName(boss, "Andi", 255, 180, 255);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		ObjEnemy_SetIntersectionCircleToShot(boss, ex, ey, 32); //hitbox against player bullets. 32 is the radius.
		ObjEnemy_SetIntersectionCircleToPlayer(boss, ex, ey, 24); //hitbox against the player. 24 is the radius.
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	//ObjMove_SetDestAtFrame(boss, rand(cx+60, cx-60), rand(cy-120, cy-90), 60);
	ObjMove_SetDestAtFrame(boss, cx, cy-120, 60);
	
	SetSpellCard;
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,5760); //5760
	TAfterImageBoss(boss,[255,255,255],1,1,15,3,BLEND_ADD_ARGB,0);
	SE_Play(nyaa,60);
	SetCaution;

	wait(90);
	
	ObjEnemy_SetDamageRate(boss,24,8);


	
	frame = 0;
	
	TShoot;
	TBigShots;
//	Tmovement(cx-60,cx+60, cy,cy-60, 60,240, []); //[MOVE_PLAYERBIAS,2,0]

}





let N = 1; //3

let rad0 = 30;
//let rad1 = rad0+5*M;
let off0 = 90;
let coloff = 0;

task TShoot {
	let seobj = ObjSound_Create;
	let shot;
	let dir = 1;
	let ang;
	
	let ang0 = 150;
	let ang1 = 120; //240-(N-1)*6;
	
	let a = 0;
		
	while(!Obj_IsDeleted(boss)) {
		ascent(j in 0..7){
			ascent(k in 0..2){
				//shot = CreateShotA1(ex,ey,0.25*j,180*k + j*sign(k-0.5), type0, 0);
				shot = CreateShotA2(cx,0,0.5*j,180*k, 0, 0.5*j,   type0, 0);
				ObjMove_SetAngularVelocity(shot,0.03*j*sign(k-0.5));
				//ObjMove_AddPatternA3(shot,60,0,90,0.1,0,1.5, type1);
				//OH NOOOOOOOOOO
				ObjMove_AddPatternB3(shot,60,0,0,rand(0,0.05)*dir, 0.1, rand(0,0.25*dir), 1.5, 212);	
			}
		}
		SE_PlayA2(se_shot,30,seobj,30);
		wait(30);
	}
}



task TBigShots {
	let shot; let ang;
	let xdir = -1; let ydir;
	
	let ax; let ay;
	
	let movecounter = 0;
	
	while(!Obj_IsDeleted(boss)) {
		wait(30);
		SetAttackPose(60);
		wait(30);
		
		//"Warn" shot
		shot = CreateSunShotA2(ex, ey, 1, GetAngleToPlayer(boss), "GROW", 0.5, 0.005, 1, true, 255,0,0);		//255,180,128
		ObjRender_SetColor(Obj_GetValue(shot,"SunRenderObject"),255,200,140);
		Obj_SetValue(shot,"Delete","Expand"); Obj_SetValue(shot,"ExpandRate",0.025); Obj_SetValue(shot,"DeleteTime",30);
		
		//Actual shot
		shot = CreateSunShotA2(ex, ey, 1, GetAngleToPlayer(boss), "GROW", 0.5, 0.0025, 1, true, 255,0,0);		//255,180,128
		ObjRender_SetColor(Obj_GetValue(shot,"SunRenderObject"),255,200,140);
		CustWrap(shot);
		ObjShot_SetSpellResist(shot,true);
		ObjShot_SetAutoDelete(shot,false);

		SE_Play(se_explode,100);
		ConcentrationA4Invert(boss,"HEXAGON",3,50,[255,0,200]);	
	
		wait(15);
		if(movecounter%2==0){ObjMove_SetDestAtFrame(boss,rand(cx-60,cx+60),rand(cy,cy-60),60);}
		movecounter++;
		wait(45);
	}
	
	
}








function CustWrap(shot) {
	let x; let y; let scale;
	task TCustWrap(shot) {
		x = ObjMove_GetX(shot); y = ObjMove_GetY(shot);
		scale = ObjRender_GetScaleX(shot);
		while(!(x<-128*scale || y<-128*scale || x>sx+128*scale || y>sy+128*scale)){
			yield;
			x = ObjMove_GetX(shot); y = ObjMove_GetY(shot);
			scale = ObjRender_GetScaleX(shot);
		}
		if(x<0||x>sx){ObjMove_SetX(shot,cx+(cx-x));}
		if(y<0||y>sy){ObjMove_SetY(shot,cy+(cy-y));}
		//ObjMove_SetY(shot,sy);
//		ObjMove_AddPatternA3(shot,0,0,ang,0.05,0, 3.5, 146);
	//	ObjMove_AddPatternA3(shot,0,NO_CHANGE,NO_CHANGE,NO_CHANGE,0,3.5,765);
	}
	TCustWrap(shot);
}











