#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["\"The Unfiltered World\""]
#Text["..."] 
#BGM["./bgm/bgm - Hartmann's Youkai Girl.ogg"] //Bhava-Agra As Seen Through a Child's Mind.mp3"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Sky.txt"]

#include "./Index.txt"

let timer = 77; //37
let phase = 0;

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	case(EV_REQUEST_IS_DURABLE_SPELL) {
		SetScriptResult(true);
	}
//	case(EV_REQUEST_IS_LAST_SPELL){
//		SetScriptResult(true);
//	}
	
	case(EV_REQUEST_TIMER) { SetScriptResult(timer*60); }
}
@Initialize
{
	SetCommonData("CurrentSC","\"The Unfiltered World\"");
	SetCommonData("Difficulty","Extra");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	//SetShotAutoDeleteClip(64,96,64,64);
	SetShotAutoDeleteClip(16,16,16,16);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		SetBossHitbox(boss,ex,ey);
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, cx, cy-120, 60);
	
	SetSurvivalCard;
	MCircNextAlpha = 80;
	Obj_SetValue(objSpellCircle,"MaxAlpha",64);
	
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760
	
	SetCaution;
//	SetBossBlur(true);
	AuraRainbow(boss,255,255,255);
	TSpellImmune;

	//ConcentrationA2(boss,"HEXAGON",90,3,10,[255,0,255]);
		
	wait(90);
	Tmovement(cx-120,cx+120, cy-90,cy-60, 60,240, [MOVE_PLAYERBIAS,2,0,MOVE_MAXSPEED,1.5] );
	ObjEnemy_SetDamageRate(boss,24,8);
	frame = 0;

	TShoot;
	TCircles;
	
	SlowShots;
	LifebarSpaz;
	PhaseChange;
	
	while(phase<3){yield;}
	TFigureEightShots;
	while(phase<7){yield;}
	TShotWall;
	while(GetTimer>=2){yield;}
	ExplosionB4(boss,"HEXAGON",[255,0,0],[255,0,255]);
//	wait(59);
	
//	enddel;
}
//function enddel{wait(130);}


task LifebarSpaz{
	while(!Obj_IsDeleted(boss)){
		wait(rand(rand(0,30),60));
		setlife(rand(500,2000));
		if(randint(0,3)==0){SE_Play(nyaa,rand(rand(50,100),rand(50,100)));}
	}
}
task LifebarDip{
	ascent(i in 0..120){
		setlife(2000 - 1800*abs(sin( (i+rand(-phase*phase,phase*phase)) *180/120) ));
		yield;
	}
	wait(rand(0,60));
	LifebarSpaz;
}



task PhaseChange{
	let dels = [600,900,600,100,300,400,500];
	while(!isnull(boss) && phase < length(dels)){
		wait(dels[phase]);
		//SE_Play(se_defeated,100);
		ExplosionB1(boss,"HEXAGON",[255,0,0],[255,0,255]);
		
		LifebarDip;
		DeleteShotAll(TYPE_ALL,TYPE_ITEM);
		phase++;
	}
	
	
}




task TShoot {
	
	let shot;

	let types = [DOT_MAGENTA+500,DOT_BLUE+500];
	
	let count = 0; let dir = 1; let ydir;
	let sa;
	
	while(!Obj_IsDeleted(boss)) {
	//	SE_Play(se_chime,40);
		
		dir*=-1;
		ydir = randSign;
		sa = tosa(0.01*dir,rand(0,0.005)*ydir);
		
		shot = CreateShotA2(cx-cx*dir,rand(0,sy), 0,sa[1], sa[0], 1.75, types[count%2], 15);
		//shot = CreateShotB2(cx-cx*dir,rand(0,sy), 0,0, 0.01*dir,rand(0,0.01)*ydir, 1.75*dir,0.5*ydir, types[count%2], 15);
		
	//	ObjRender_SetAlpha(shot,128);
		
	//	if(phase==7){ObjShot_FadeDelete(shot);}
	//	else{
			if(phase<2 || randint(0,3)!=0){
				ObjShot_SetIntersectionEnable(shot,false);
				Obj_SetValue(shot,"WasInfluenced",false);
				TintShot(shot,120);
			}else{
				ObjShot_SetGraphic(shot,DOT_RED+500);
				Obj_SetValue(shot,"WasInfluenced",true);
			}
	//	}
		
		yield; count++;

	}
}

task Trail(shot){
	wait(rand(0,10));
	while(!Obj_IsDeleted(shot)){
		AfterImageShot(shot,GetDelayColor(shot),0,1,40,BLEND_ADD_ARGB,21);
		wait(10);
	}
}



//let targ = CreateDummyShot(ex,ey);
let circ = ObjPrim_Create(OBJ_SPRITE_2D);

task TCircles{

	let dist; let ang;
	
	while(!isnull(boss)){
		
		//circ = InfluenceCircleA1(ex,ey,50,INFL_AIMACCEL,[0.5,2],GetPlayerObjectID); 
	//	circ = ObjPrim_Create(OBJ_SPRITE_2D);
		
		alternative(phase)
		case(0){
			SE_Play(se_chime2,100);
			circ = InfluenceCircleA1(ex,ey,50,INFL_ADDPATTERN,AIM_REL,[0.15,0,  0.015,0,  10,SUPP_RED+500]); 
			setval(circ,"CheckRand",true);
			setval(circ,"RandAngle",[0,360]);
			ThrowLoop(circ,px,py,120);
			TExpandCircle(circ,1);
			wait(120);
		}
		case(1){
			dist = getdist(ex,ey,px,py); ang = getangle(ex,ey,px,py);
			ascent(i in -1..2){
				SE_Play(se_chime2,100);
				circ = InfluenceCircleA1(ex,ey,50,INFL_ADDPATTERN,AIM_OBJ,[0.15,0,  0.015,0,  10,SUPP_RED+500,GetPlayerObjectID]); 
				setval(circ,"CheckRand",true);
				setval(circ,"RandAngle",[-45,45]);
				ThrowLoop(circ,ex+dist*cos(ang+45*i),ey+dist*sin(ang+45*i),120);
				TExpandCircle(circ,0.5);
				wait(30);
			}
			wait(120);
		}
		case(2){return;}
		
		
		wait(120);
	}
	
	
	task TExpandCircle(circ,mscl){
		let shots; let shot;
		
		shots = GetShotIdInCircleA2(ex,ey,999,TARGET_ENEMY);
		ascent(i in 0..length(shots)){
			shot=shots[i];
			if(getvald(shot,"Succ",0)<2){
				seta(shot,getangle(xof(shot),yof(shot),ex,ey));
				setsp(shot,0);
				setval(shot,"Succ",getvald(shot,"Succ",0)+1);
			}
		}
		
		ascent(i in 0..60){
			ObjRender_SetScaleXYZ(circ,mscl*i/60,mscl*i/60,1);
			shots = GetShotIdInCircleA2(getrx(circ),getry(circ),mscl*i/60*128-20,TARGET_ENEMY);
			FreezeShots(shots);
		//	ascent(j in 0..length(shots)){ObjShot_SetIntersectionEnable(MaterializeShot(shot),true);}	//shots[j],true);}
			//FreezeShots(GetShotIdInCircleA2(getrx(circ),getry(circ),i/60*128-15,TARGET_ENEMY));
			yield;
		}
		loop(30){
			shots = GetShotIdInCircleA2(getrx(circ),getry(circ),mscl*60/60*128-20,TARGET_ENEMY);
			FreezeShots(shots);
		//	ascent(j in 0..length(shots)){ObjShot_SetIntersectionEnable(MaterializeShot(shot),true);}	//ObjShot_SetIntersectionEnable(shots[j],true);}
			yield;
		}
		descent(i in 0..60){
			ObjRender_SetScaleXYZ(circ,mscl*i/60,mscl*i/60,1);
			shots = GetShotIdInCircleA2(getrx(circ),getry(circ),mscl*i/60*128-20,TARGET_ENEMY);
			FreezeShots(shots);
		//	ascent(j in 0..length(shots)){ObjShot_SetIntersectionEnable(MaterializeShot(shot),true);}	//ObjShot_SetIntersectionEnable(shots[j],true);}
			yield;
		}
		Obj_Delete(circ);
		
		
		
	}

	
	
	
}


let tx=0; let ty=0;

task ThrowLoop(shot, cntx,cnty, time) {
	let x0 = ObjRender_GetX(shot); let y0 = ObjRender_GetY(shot);
	let i = 0;
	let pos; let x; let y;
	ascent(i in 0..time){
		pos = GetQuadraticBezierCoordinates(x0,y0,cntx,cnty,ex,ey, i/time);
		setrpos(shot,pos[0],pos[1],0);
//		setpos(targ,pos[0],pos[1]);
		yield;
	}
}

let shot;
function FreezeShots(shots){
	if(length(shots)>0){SE_Play(se_chime,length(shots));}
	ascent(i in 0..length(shots)){
		shot = shots[i];
		if(!isval(shot,"NoInfluence")){
			
			//if(isval(shot,"NoInfluence")){break;}
			
			if(!getvald(shot,"WasInfluenced",false)){
				seta(shot,geta(shot)+90*getsp(shot));
				setsp(shot,0);
				
				ObjShot_SetSpellResist(shot,true);
				ObjShot_SetGraphic(shot,SUPP_RED+500);
				ObjRender_SetAlpha(shot,255);
				ObjShot_SetIntersectionEnable(shot,true);
				
				Obj_SetValue(shot,"WasInfluenced",true);
			}
		}
		//if(ObjShot_GetImageID(shot)==SUPP_RED){SE_Play(nyaa,100);}
		
	//	ObjMove_AddPatternA1(shot,length(shots),NO_CHANGE,GetAngleToPlayer(shot)+rand(-length(shots)/2,length(shots)/2));
		//TurnToPoint(shot,10*length(shots),px,py);
	//	TurnToPoint(shot,360,px,py);
	//	ObjMove_AddPatternA1(shot,length(shots),NO_CHANGE,geta(shot));
		
		//if(!isval(shot,"Bounced")){/*BounceA1(shot,-1,[TOP,LFT,RGT]);*/ mybounce(shot); setval(shot,"Bounced",NULL);}
	}
}





task SlowShots{
//	let cnt = InfluenceCircleA1(px,py,50,INFL_ACCEL,[-0.05,0,1],NO_CHANGE);
//	Obj_SetVisible(cnt,false);
	while(!Obj_IsDeleted(boss)){// && phase<7){
//		setx(cnt,px); sety(cnt,py);
		SuppressShots(GetShotIdInCircleA2(px,py,50,TARGET_ENEMY));
		yield;
	}
}




function SuppressShots(shots){
	let shot;
	if(length(shots)>30){SE_Play(se_shot,rand(length(shots)/10,length(shots)));}
	ascent(i in 0..length(shots)){
		shot = shots[i];
		//if(ObjShot_GetImageID(shots[i])!=SUPP_RED){
		//if(!Obj_GetValueD(shot,"WasInfluenced",false)){
		//	if(ObjShot_GetImageID(shot)!=SUPP_RED+500){			//DOT_MAGENTA+500,DOT_BLUE+500
				//Phase(shot,1,128,255);
			if(ObjShot_GetImageID(shot)==DOT_BLUE+500 || ObjShot_GetImageID(shot)==DOT_MAGENTA+500){
				myphase(shot);
			}
			//else{
			//	ObjShot_SetIntersectionEnable(shot,true);
			//	ObjRender_SetAlpha(shot,255);
			//}
		//}
	}
}



task myphase(shot){
	//ObjShot_SetIntersectionEnable(shot,false);
	ObjRender_SetAlpha(shot,128);
	yield;
	ObjRender_SetAlpha(shot,255);
}






// function MaterializeShot(shot){
	// ObjShot_SetIntersectionEnable(shot,true);
	// ObjRender_SetAlpha(shot,255);
	// Obj_SetValue(shot,"WasInfluenced",true);
	// ObjShot_SetGraphic(shot,SUPP_RED+500);
	// return shot;
// }




task TFigureEightShots{
	//let count=0;
	let pos; let shot;
	frame=0;
	//while(phase<3){yield;}
	while(phase==3){
		pos = GetFigureEightPoint(ex,ey, px,py, frame*0.01 );
		shot = CreateShotA2(pos[0],pos[1], 0,rand(0,360), 0.05, 1.75, DOT_WHITE, 15);
		yield; //count++;
	}
	
//	let circ = InfluenceCircleA1(ex,ey,50,INFL_ADDPATTERN,AIM_REL,[0.15,0,  0.015,0,  10,SUPP_RED+500]);
	let circ = InfluenceCircleA1(ex,ey,50,INFL_GRAV,3,1);
	let dist; let ang; let x; let y;
	let t = frame*0.01;
	while(phase==4){
		dist=getdist(ex,ey,px,py); ang=getangle(ex,ey,px,py);
		x = ex+dist*cos(ang+t); 
		y = ey+dist*sin(ang+t);
		pos = GetFigureEightPoint(ex,ey, px,py, t );
		shot = CreateShotA2(pos[0],pos[1], 0,rand(0,360), 0.0125, 1.75, DOT_WHITE+500, 15);
		pos = GetFigureEightPoint(ex,ey, x,y, 2-t );
		setrpos(circ,pos[0],pos[1],0);
		
		yield; t+=0.01;
	}
	let circ2 = InfluenceCircleA1(ex,ey,50,INFL_GRAV,-3,1);
	ObjRender_SetColor(circ,255,0,128);
	ObjRender_SetColor(circ2,128,0,255);
	
	let shots; let num;
	while(phase==5){
		dist=getdist(ex,ey,px,py); ang=getangle(ex,ey,px,py);
		x = ex+dist*cos(ang+t); 
		y = ey+dist*sin(ang+t);
		pos = GetFigureEightPoint(ex,ey, px,py, t );
		setrpos(circ2,pos[0],pos[1],0);
		shots = GetShotIdInCircleA2(pos[0],pos[1],50,TARGET_ENEMY);
		ActivateShots(shots);
		num=length(shots);
		
		pos = GetFigureEightPoint(ex,ey, x,y, -t );
		setrpos(circ,pos[0],pos[1],0);
		shots = GetShotIdInCircleA2(pos[0],pos[1],50,TARGET_ENEMY);
		ActivateShots(shots);
		num+=length(shots);
		
		if(num>0){SE_Play(se_chime,num);}
		
		yield; t+=0.01;
		
		if(t%2==0){t+=2;}
	}
	t=0;
	while(phase==6){
		//dist=getdist(ex,ey,px,py); ang=getangle(ex,ey,px,py);
		//x = ex+dist*cos(ang+t); 
		//y = ey+dist*sin(ang+t);
		pos = GetFigureEightPoint(ex,ey, px,py, 1+sin(frame) );
		setrpos(circ2,pos[0],pos[1],0);
		shots = GetShotIdInCircleA2(pos[0],pos[1],50,TARGET_ENEMY);
		ActivateShots(shots);
		num=length(shots);
		
		pos = GetFigureEightPoint(ex,ey, px,py, 1-sin(frame) );
		setrpos(circ,pos[0],pos[1],0);
		shots = GetShotIdInCircleA2(pos[0],pos[1],50,TARGET_ENEMY);
		ActivateShots(shots);
		num+=length(shots);
		
		if(num>0){SE_Play(se_chime,num);}
		
		if(randint(0,5)==0){ShrinkRotCircle(rand(0,sx),rand(0,sy),3*randSign,rand(50,rand(50,100)),60);}
		
		yield; t+=0.01;
	}
	Obj_Delete(circ); Obj_Delete(circ2);
}



function ActivateShots(shots){
	ascent(i in 0..length(shots)){
		shot=shots[i];
		ObjShot_SetIntersectionEnable(shot,true);
		setval(shot,"WasInfluenced",true);
		ObjRender_SetColor(shot,255,255,255);
	}
}






task ShrinkRotCircle(x,y,spd,size,dur){
	SE_Play(se_chime2,100);
	let circ = InfluenceCircleA1(x,y,size,INFL_REVOLVE,spd,1);
	descent(i in 0..dur){
		ObjRender_SetScaleXYZ(circ,size/128*i/dur,size/128*i/dur,1);
		yield;
	}
	Obj_Delete(circ);
	
}










task TShotWall{
//	while(phase<7){yield;}
	
	let shot; let shots;
	let x; let y; let dir=1;
	let ang = 90;
	let seobj=ObjSound_Create;
	
	let circ = NULL; //let circpush = NULL;
	let rad; let mrad = sy; //getdist(0,0,sx,sy);
	
	let count = 0;

	while(phase==7){
		ascent(i in 0..mrad/2){
			loop(2){
				shot = CreateShotA2(cx+i*dir*cos(ang)+rand(-3,3),cy+i*dir*sin(ang)+rand(-3,3),0,ang+90-90*dir, 0.00001*i,2.5,  BALL_MAGENTA+500, 15);
				ObjShot_SetSpellResist(shot,true);
				ObjShot_SetAutoDelete(shot,false);
				dir*=-1;
			}
			SE_PlayA2(se_chime2,100,seobj,30);
			wait(floor(rand(0,rand(1,3))));
		}
		wait(30);
		
		if(isnull(circ)){circ = InfluenceCircleA1(cx,cy,0,INFL_REVOLVE,1,1);}
		ascent(i in 0..500){
			rad = mrad*0.75*(|sin(count/5)|);
			ObjRender_SetScaleXYZ(circ,rad/128,rad/128,1);
			yield; count++;
			
			if(randint(0,5)==0){ShrinkRotCircle(rand(0,sx),rand(0,sy),3*randSign,rand(50,rand(50,100)),60);}
		}
		
		//wait(240);
	}
	
}