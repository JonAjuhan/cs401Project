#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Test Sign \"Test\""]
#Text["..."] 
#BGM["./bgm/bgm - Hartmann's Youkai Girl.mp3"]
// #BGM["./bgm/bgm - Bhava-Agra As Seen Through a Child's Mind.mp3"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Sky.txt"]

#include "./Index.txt"



let fog;

let timer = 37; //30

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	case(EV_REQUEST_IS_DURABLE_SPELL) {
		SetScriptResult(false);
	}
//	case(EV_REQUEST_IS_LAST_SPELL){
//		SetScriptResult(true);
//	}
	
	case(EV_REQUEST_TIMER) { SetScriptResult(timer*60); } //4500
}
@Initialize
{
	SetCommonData("CurrentSC","Test Sign \"Test\"");
	SetCommonData("Difficulty","Extra");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(64,96,64,64);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		SetBossHitbox(boss,ex,ey);
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, cx, cy-120, 60);
	
	SetSpellCard;
//	MCircNextAlpha = 80;
	Obj_SetValue(objSpellCircle,"MaxAlpha",64);
	
	ObjEnemyBossScene_StartSpell(objScene);
//	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760
	
//	SetCaution;
//	SetBossBlur(true);
	AuraRainbow(boss,255,255,255);
	
	wait(90);
	Tmovement(cx-120,cx+120, cy-90,cy-60, 60,240, [MOVE_PLAYERBIAS,2,0,MOVE_MAXSPEED,1.5] );
	ObjEnemy_SetDamageRate(boss,24,8);
	frame = 0;

	TShoot;
	TItems;
	TShoot2;
}




task TShoot {
	
	let shot;
		
	let t;
	let a=45;
	
	shot = CreateShotA2(cx,cy,0,0,0,0, BALL_YELLOW ,0);
	ObjShot_SetSpellResist(shot,true);
	
	while(!Obj_IsDeleted(boss)) {
		SE_Play(se_shot,40);
		//TrackShot(cx,cy,rand(0,1),a,rand(0.01,0.1),1,rand(1.5,4), 300);
	//	TrackShot(cx,cy,2,a ,1,1,3, 100);
		
		
		shot = CreateShotA2(cx,cy,2,a,1,3, BALL_O_MAGENTA+500 ,0);
		ObjMove_SetAngularVelocity(shot,1);
		WrapA1(shot,4,[LFT,RGT,TOP,BTM]);
		shot = CreateShotA2(cx,cy,2,a,1,3, BALL_O_BLUE+500 ,0);
		ObjMove_SetAngularVelocity(shot,-1);
		WrapA1(shot,4,[LFT,RGT,TOP,BTM]);
		
		
	//WrapA1(shot,-1,[TOP,BTM,RGT,CLIP,-100]);
		wait(5); a+=90;
	}
}


task TrackShot(x,y,s,a,acc,angv,msp,dist){
	let shot = CreateShotA2(x,y,s,a,acc,msp, DOT_YELLOW ,0);
	ObjMove_SetAngularVelocity(shot,angv);
	let t = projecttime(s,acc,msp, dist);
//	let d = projectdist(s,acc,msp, t);
	let pos;// = projectposangv(x,y,s,a,acc,angv,msp,t);
	//wait(t);
	ascent(i in 0..t){
		pos = projectposangv(x,y,s,a,acc,angv,msp,i);
		DebugWarnShot(pos[0],pos[1]);
		yield;
	}
	pos = projectposangv(x,y,s,a,acc,angv,msp,t);
	DebugWarnShot(pos[0],pos[1]);
	ObjShot_SetGraphic(shot,BALL_RED);
	ObjMove_AddPatternA2(shot,NO_CHANGE,0,0,0,0,0);
	SE_Play(se_chime,40);
}





task TItems{
	loop{
		CreateItemA1(ITEM_POWER,ex,ey,1000+GetGraze*10);
		wait(60);
	}
}



task TShoot2{
	loop{
		wait(60);
		TestExplode(rx,ry/2); 
		//rx and ry are lazy shortcut functions
		//rx returns rand(0,sx) and ry returns rand(0,sy)
		//recall that sx is a global holding the width of the stage frame and ditto with sy/height
	}
}

function TestExplode(x,y){
	let a0 = rand(0,360);
	ascent(i in 0..90){
		CreateShotA1(x,y,2,a0+i*360/30,SCALE_AQUA+altBin(i)*altSign(i/3), 15+i+2*altSign(i));
		//a0+i*360/30: initial angle plus a bit each shot such that it goes around 3 times
		//SCALE_AQUA+altBin(i)*altSign(i/3): vary shot graphic. altBin returns 0/1, altSign 1/-1 depending on if input even or odd
		//15+i+2*altSign(i): increase shot's delay with i, plus a small alternating offset.
		//This allows all shots to be created at once, but start moving at different times.
	}
	SE_Play(se_shot2,100);
}