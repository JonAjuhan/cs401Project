#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Trance \"Great Blade Dance Arcanum\""]
#Text["..."] 
#BGM["./bgm/bgm - Bhava-Agra As Seen Through a Child's Mind.mp3"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Stars.txt"]

#include "./Index.txt"

let PHASE_WAIT = 0;
let PHASE_GRID = 1;
let PHASE_GEAR = 2;
let PHASE_NEST = 3;
let PHASE_AXES = 4;
let PHASE_SPIKY= 5;
let PHASE_BLENDER = 6;
let phase = PHASE_WAIT;


let fog;

let timer = 97; //30

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	case(EV_REQUEST_IS_DURABLE_SPELL) {
		SetScriptResult(true);
	}
//	case(EV_REQUEST_IS_LAST_SPELL){
//		SetScriptResult(true);
//	}
	
	case(EV_REQUEST_TIMER) { SetScriptResult(timer*60); } //4500
}
@Initialize
{
	SetCommonData("CurrentSC","Trance \"Great Blade Dance Arcanum\"");
	SetCommonData("Difficulty","Last Word");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(64,96,64,64);
	
	EnemyName(boss, "Andi", 255, 180, 255);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]); //[BREAK_DELAY,120]
	}
	else {
		SetBossHitbox(boss,ex,ey);
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, cx, cy-120, 60);
	
	SetSurvivalCard;
	MCircNextAlpha = 80;
	Obj_SetValue(objSpellCircle,"MaxAlpha",64);
	
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760
	
	SetCaution;
	SetBossBlur(true);
	
	wait(90);
	Tmovement(30,sx-30, 30,cy+90, 60,240, [MOVE_NEAR,150,MOVE_FAR,50,MOVE_PNLSPACE,50,MOVE_MAXSPEED,1.5,MOVE_SMOOTH,10]); //[MOVE_PLAYERBIAS,2,0]
	ObjEnemy_SetDamageRate(boss,24,8);
	frame = 0;

	phase = PHASE_GRID;	//red
	TGrid;
	wait(900);
	DeleteShotAll(TYPE_ALL,TYPE_FADE);
	ClearFam;
	
	phase = PHASE_GEAR;	//orange
	TBigGears;
	wait(1000);
	DeleteShotAll(TYPE_ALL,TYPE_FADE);
	ClearFam;
	
	phase = PHASE_NEST;	//yellow
	TNestedWheels;
	wait(900);
	DeleteShotAll(TYPE_ALL,TYPE_FADE);
	ClearFam;
	
	phase = PHASE_AXES; //green
	TAxes;
	wait(900);
	DeleteShotAll(TYPE_ALL,TYPE_FADE);
	ClearFam;
	
	phase = PHASE_SPIKY; //blue
	TSpiky;
	wait(900);
	DeleteShotAll(TYPE_ALL,TYPE_FADE);
	ClearFam;
	
	phase = PHASE_BLENDER; //purple
	TFog;
	wait(90);
	TBlender;
	
	while(GetTimer>1||finishing){yield;}
	
	finishing = true;
	TBreakSpell([BREAK_DELAY,120]);
	
}





task TBlender {
	let count = 0;
	let off = -32;
	let dX = 10;
	
	let fam; let box;
	
	while(!Obj_IsDeleted(boss)){
		

		//fam(x,y,life,size,type,collision)
		//CreateBoxA1(x, y, dist, dir, sides, l, w, dt, g, d)
		
		ascent(i in 0..5) {
			fam = createFam( off+((sx+64)/5*i+dX*count)%(sx+64),-64,100,1,5,false);
			box = CreateBoxA1( off+((sx+64)/5*i+dX*count)%(sx+64),-64, 15, 0,  2*altSign(count),0, 3, 60, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,-0.5,0.5);
			WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			SetLaserSources(box,true);
		}
		

		count++;
		wait(120);
	}
}


task TFollow(obj1,obj2) {
	while(!Obj_IsDeleted(obj1) && !Obj_IsDeleted(obj2)) {
		ObjMove_SetPosition(obj1,ObjMove_GetX(obj2),ObjMove_GetY(obj2));
		yield;
	}
	if(!Obj_IsDeleted(obj1)){Obj_Delete(obj1);}
}

task TFollowTip(obj1,obj2,rad) {
	let a; let x; let y; let controller = Obj_GetValueD(obj2,"Controller",obj2); let tmp;
	while(!Obj_IsDeleted(obj1) && !Obj_IsDeleted(obj2)) {
		//a = ObjRender_GetAngleZ(obj2); 
		a = ObjMove_GetAngle(controller)+ObjMove_GetAngle(obj2);
		x = ObjMove_GetX(obj2);	//+rad*cos(a);
		y = ObjMove_GetY(obj2);	//+rad*sin(a);
		tmp = rotate(rad,0, 0,0, a);
		x+=tmp[0]; y+=tmp[1];
		
		ObjMove_SetPosition(obj1,x,y);
		yield;
	}
	if(!Obj_IsDeleted(obj1)){Obj_Delete(obj1);}
}

task TFollowTip2(obj1,obj2,rad,spd,a0) {
	let a=a0; let x; let y; let tmp;
	while(!Obj_IsDeleted(obj1) && !Obj_IsDeleted(obj2)) {
		a+=spd;
		x = ObjMove_GetX(obj2);	//+rad*cos(a);
		y = ObjMove_GetY(obj2);	//+rad*sin(a);
		tmp = rotate(rad,0, 0,0, a);
		x+=tmp[0]; y+=tmp[1];
		
		ObjMove_SetPosition(obj1,x,y);
		yield;
	}
	if(!Obj_IsDeleted(obj1)){Obj_Delete(obj1);}
}







//Grid of shots
task TGrid {
	let seobj = ObjSound_Create;
	let shot; let fam; let box;
	

	//let types = [758]; let nt = length(types);
	
	let gap = 150; //30
	let xgap = gap; let ygap = gap;
	let xN = ceil(sx/xgap)+1; let yN = ceil(sy/ygap)+1;
	
	let xoff = absolute(xgap*xN-sx)/2; let yoff = absolute(ygap*yN-sy)/2;
	
//	let spd = 0.75;
//	let ang = 45;
//	let mainspd = spd*cos(ang);
//	let driftspd= spd*sin(ang);
	
	let mainspd =  0.75; 
	let driftspd = 0.25;
	
	let type = 758; //212
	
	
	let del = gap/mainspd;
	
	let count=0;
	while(!Obj_IsDeleted(boss) && phase == PHASE_GRID) {
		//Vertical shots, created across X
		ascent(i in 0..xN-1){
			//down and right
			//shot = CreateShotB1(xgap*i-xoff,  -yoff, driftspd, mainspd, type,0);
			fam = createFam(   xgap*i-xoff,-yoff,  100,1, 1,false);
			box = CreateBoxA1( xgap*i-xoff,-yoff, 15, 0,  3*altSign(count),count, 1, 60, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,driftspd,mainspd);
			WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			SetLaserSources(box,true);
			
			//up and left
			//shot = CreateShotB1(xgap*i-xoff,sy+xoff,-driftspd,-mainspd, type,0);
			fam = createFam(   xgap*i-xoff,   sy+xoff,  100,1, 1,false);
			box = CreateBoxA1( xgap*i-xoff,    sy+xoff, 15, 0,  3*altSign(count),count, 1, 60, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,-driftspd,-mainspd);
			WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			SetLaserSources(box,true);
		}
		//Horizontal shots, created across Y
		ascent(i in 0..yN-1){
			//right and up
			//shot = CreateShotB1( -xoff, ygap*i-yoff, mainspd,-driftspd, type,0);
			fam = createFam(   -xoff, ygap*i-yoff,  100,1, 1,false);
			box = CreateBoxA1( -xoff, ygap*i-yoff, 15, 0,  3*altSign(count),count, 1, 60, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,mainspd,-driftspd);
			WrapA1(fam,-1,[BTM,TOP,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			SetLaserSources(box,true);
			
			//left and down
			//shot = CreateShotB1(sx+xoff,ygap*i-yoff,-mainspd, driftspd, type,0);
			fam = createFam(   sx+xoff,ygap*i-yoff,  100,1, 1,false);
			box = CreateBoxA1( sx+xoff,ygap*i-yoff, 15, 0,  3*altSign(count),count, 1, 60, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,-mainspd,driftspd);
			WrapA1(fam,-1,[BTM,TOP,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			SetLaserSources(box,true);
		}
		//SE_PlayA2(se_chime,40,seobj,30);
		count++;
		wait(del);
		
		
	}
}






task TBigGears {
	
	let count = 0;
	let off = -32;
	let dX = 100;
	
	let fam; let box;
	
	while(!Obj_IsDeleted(boss) && phase==PHASE_GEAR){
		

		//fam(x,y,life,size,type,collision)
		//CreateBoxA1(x, y, dist, dir, dir0, sides, l, w, dt, g, d)
		
		fam = createFam( cx/2+cx*(count%2),-128,100,  3  ,6,false);
		box = CreateBoxA1( cx/2+cx*(count%2), -128, 40, 0, 0.45*altSign(count), 45*(count%2), 8, 150, 30, 99300, 1057, 30);		//length 60, speed 3*altSign(count)
		ObjMove_AddPatternB1(fam,0,0,0.75);
		//WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
		ObjShot_SetAutoDelete(box,false);
		TFollow(box,fam);
		SetLaserSources(box,true);
		
		
		count++;
		wait(240);
	}
	
}







task TNestedWheels {
	
	
	let count = 0;
	let off = -32;
	let dX = 30;
	
	let fam; let box; let lasers;
	
	while(!Obj_IsDeleted(boss) && phase==PHASE_NEST){
		

		//fam(x,y,life,size,type,collision)
		//CreateBoxA1(x, y, dist, dir, sides, l, w, dt, g, d)
		
		ascent(i in 0..2) {
			fam = createFam( off+((sx+64)/2*i+dX*count)%(sx+64),-64,100,1,4,false);
			box = CreateBoxA1( off+((sx+64)/2*i+dX*count)%(sx+64),-64, 30, 0,  2*altSign(count),0, 1, 60, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,0,1.5);
			WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			lasers = SetLaserSources(box,true);
			
			ascent(j in 0..length(lasers)) {
				fam = createFam( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]),100,0.3,4,false);
				box = CreateBoxA1( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]), 5, 0,  0.75*altSign(count),0, 1, 30, 20, 99300, 1057, 60);		//length 60, speed 3*altSign(count)
				ObjMove_AddPatternB1(fam,0,0,1.5);
				WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
				ObjShot_SetAutoDelete(box,false);
				TFollow(box,fam);
				TFollowTip2(fam,lasers[j],45,2*altSign(count),0+j*360/length(lasers)); //40
				
				let lasers2 = SetLaserSources(box,true);
				ascent(k in 0..length(lasers2)) {
					fam = createFam( ObjMove_GetX(lasers[k]),ObjMove_GetY(lasers2[k]),100,0.3,4,false);
					box = CreateBoxA1( ObjMove_GetX(lasers[k]),ObjMove_GetY(lasers2[k]), 3, 0,  3.75*altSign(count),0, 4, 15, 20, 99300, 1057, 60);		//length 60, speed 3*altSign(count)
					ObjMove_AddPatternB1(fam,0,0,1.5);
					WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
					ObjShot_SetAutoDelete(box,false);
					TFollow(box,fam);
					TFollowTip2(fam,lasers2[k],30,0.75*altSign(count),0+j*360/length(lasers2)); //40
						
				}
				
			}
		}
		
		count++;
		wait(30);
	}
}






task TSpiky {
	
	
	let count = 0;
	let off = -32;
	let dX = 100;
	
	let fam; let box; let lasers;
	
	while(!Obj_IsDeleted(boss) && phase==PHASE_SPIKY){
		

		//fam(x,y,life,size,type,collision)
		//CreateBoxA1(x, y, dist, dir, sides, l, w, dt, g, d)
		
		ascent(i in 0..1) {
			fam = createFam( off+((sx+64)/5*i+dX*count)%(sx+64),-64,100,1,3,false);
			box = CreateBoxA1( off+((sx+64)/5*i+dX*count)%(sx+64),-64, 15, 0,  2*altSign(count),0, 2, 40, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,-1.5,1.5);
			WrapA1(fam,-1,[LFT,RGT,CLIP,64]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			lasers = SetLaserSources(box,true);
			
			ascent(j in 0..length(lasers)) {
				fam = createFam( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]),100,0.3,3,false);
				box = CreateBoxA1( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]), 5, 0,  0.75*altSign(count),0, 3, 80, 15, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
				ObjMove_AddPatternB1(fam,0,-1.5,1.5);
				WrapA1(fam,-1,[LFT,RGT,CLIP,64]);
				ObjShot_SetAutoDelete(box,false);
				TFollow(box,fam);
				TFollowTip(fam,lasers[j],0); //40
					
			}
		}
		
		count++;
		wait(30);
	}
}



task TAxes {
	let count = 0;
	let off = -32;
	let dX = 10;
	
	let fam; let box; let lasers;
	
	let gap = 150; //30
	let xgap = gap; let ygap = gap;
	let xN = ceil(sx/xgap)+1; let yN = ceil(sy/ygap)+1;
	
	let xoff = absolute(xgap*xN-sx)/2; let yoff = absolute(ygap*yN-sy)/2;
	
	let mainspd =  0.75; 
	let driftspd = 0.25;
	
	let rotspd = 1.5;
	
	let del = gap/mainspd;
	
	while(!Obj_IsDeleted(boss) && phase == PHASE_AXES) {
		//Vertical shots, created across X
		ascent(i in 0..xN-1){
			//down and right
			//shot = CreateShotB1(xgap*i-xoff,  -yoff, driftspd, mainspd, type,0);
			fam = createFam(   xgap*i-xoff,-yoff,  100,1, 2,false);
			box = CreateBoxA1( xgap*i-xoff,-yoff, 15, 0,  rotspd*altSign(count),count, 1, 40, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,driftspd,mainspd);
			WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			lasers = SetLaserSources(box,true);
			MakeNestWheel(fam,box,lasers);
			
			//up and left
			//shot = CreateShotB1(xgap*i-xoff,sy+xoff,-driftspd,-mainspd, type,0);
			fam = createFam(   xgap*i-xoff,   sy+xoff,  100,1, 2,false);
			box = CreateBoxA1( xgap*i-xoff,    sy+xoff, 15, 0,  rotspd*altSign(count),count, 1, 40, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,-driftspd,-mainspd);
			WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			lasers = SetLaserSources(box,true);
			MakeNestWheel(fam,box,lasers);
			
		}
		//Horizontal shots, created across Y
		ascent(i in 0..yN-1){
			//right and up
			//shot = CreateShotB1( -xoff, ygap*i-yoff, mainspd,-driftspd, type,0);
			fam = createFam(   -xoff, ygap*i-yoff,  100,1, 2,false);
			box = CreateBoxA1( -xoff, ygap*i-yoff, 15, 0,  rotspd*altSign(count),count, 1, 40, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,mainspd,-driftspd);
			WrapA1(fam,-1,[BTM,TOP,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			lasers = SetLaserSources(box,true);
			MakeNestWheel(fam,box,lasers);
			
			
			//left and down
			//shot = CreateShotB1(sx+xoff,ygap*i-yoff,-mainspd, driftspd, type,0);
			fam = createFam(   sx+xoff,ygap*i-yoff,  100,1, 2,false);
			box = CreateBoxA1( sx+xoff,ygap*i-yoff, 15, 0,  rotspd*altSign(count),count, 1, 40, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,-mainspd,driftspd);
			WrapA1(fam,-1,[BTM,TOP,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			lasers = SetLaserSources(box,true);
			MakeNestWheel(fam,box,lasers);
			
		}
		//SE_PlayA2(se_chime,40,seobj,30);
		count++;
		wait(del);	
	}
	
	
	function MakeNestWheel(fam,box,lasers){
		ascent(j in 0..length(lasers)) {
			fam = createFam( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]),100,0.3,2,false);
			box = CreateBoxA1( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]), 0, 0,  0.75*altSign(count),0, 2, 80, 15, 99300, 1057, 60);		//length 60, speed 3*altSign(count)
			WrapA1(fam,-1,[LFT,RGT,TOP,BTM,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			TFollowTip2(fam,lasers[j],40,rotspd*altSign(count),0); //40		
		}
	}
	
}






task TMacerate {
	
	
	let count = 0;
	let off = -32;
	let dX = 10;
	
	let fam; let box; let lasers;
	
	while(!Obj_IsDeleted(boss)){
		

		//fam(x,y,life,size,type,collision)
		//CreateBoxA1(x, y, dist, dir, sides, l, w, dt, g, d)
		
		ascent(i in 0..5) {
			fam = createFam( off+((sx+64)/5*i+dX*count)%(sx+64),-64,100,1,4,false);
			box = CreateBoxA1( off+((sx+64)/5*i+dX*count)%(sx+64),-64, 15, 0,  2*altSign(count),0, 2, 30, 20, 99300, 1057, 15);		//length 60, speed 3*altSign(count)
			ObjMove_AddPatternB1(fam,0,0,0.5);
			WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
			ObjShot_SetAutoDelete(box,false);
			TFollow(box,fam);
			lasers = SetLaserSources(box,true);
			
			ascent(j in 0..length(lasers)) {
				fam = createFam( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]),100,0.3,4,false);
				box = CreateBoxA1( ObjMove_GetX(lasers[j]),ObjMove_GetY(lasers[j]), 5, 0,  0.75*altSign(count),0, 3, 30, 20, 99300, 1057, 60);		//length 60, speed 3*altSign(count)
				ObjMove_AddPatternB1(fam,0,0,0.5);
				WrapA1(fam,-1,[LFT,RGT,CLIP,32]);
				ObjShot_SetAutoDelete(box,false);
				TFollow(box,fam);
				TFollowTip2(fam,lasers[j],40,2*altSign(count),0+j*360/length(lasers)); //40
					
			}
		}
		
		count++;
		wait(120);
	}
}









task TFog {
	
//	let targ = CreateShotA1(ex,ey,0,0,0,0); 
//	ObjShot_SetSpellResist(targ,true);
//	ObjShot_SetAutoDelete(targ,false);
	
	fog = NightBlindA1(600,100,180,  0,255,30);
//	ObjRender_SetColor(fog,255,200,255);
	
	wait(60);
	Obj_SetValue(fog,"Radius",100);
	Obj_SetValue(fog,"ShrinkTime",60);
	Obj_SetValue(fog,"Check",false);
	wait(30);
	Obj_SetValue(fog,"Radius",100);
	Obj_SetValue(fog,"ShrinkTime",10);
	Obj_SetValue(fog,"Check",false);
	
	
	wait(420);
	
	Obj_SetValue(fog,"Radius",400);
	Obj_SetValue(fog,"ShrinkTime",240);
	Obj_SetValue(fog,"Check",false);
	wait(60);
	ObjRender_SetColor(fog,235,255,255);
	Obj_SetValue(fog,"Radius",400);
	Obj_SetValue(fog,"ShrinkTime",120);
	Obj_SetValue(fog,"Check",false);
	wait(60);
	ObjRender_SetColor(fog,200,255,255);
	Obj_SetValue(fog,"Radius",400);
	Obj_SetValue(fog,"ShrinkTime",30);
	Obj_SetValue(fog,"Check",false);
	
	NearEffect;
	
	
}






task NearEffect {
	let shots; let shot;
	while(!Obj_IsDeleted(boss)){
		shots = GetShotIdInCircleA2(px,py,128,TARGET_ENEMY);
		ascent(i in 0..length(shots)) {
			if(Obj_IsValueExists(shots[i],"Lasers")){
				shot = shots[i];
				//GlowCircle(ObjMove_GetX(shot),ObjMove_GetY(shot),[32,0,0],1,-1,10);		//128-Distance(ObjMove_GetX(shot),ObjMove_GetY(shot),px,py)
				AfterImageCircle(ObjMove_GetX(shot),ObjMove_GetY(shot),[255,200,200],1,-1,10,BLEND_MULTIPLY,23);
				//GlowCircle(ObjMove_GetX(shot),ObjMove_GetY(shot),[min(512/Distance(ObjMove_GetX(shot),ObjMove_GetY(shot),px,py),128),0,0],1,-1,10);
				yield;
			}
		}
		yield;
	}
}


	// task TEffect(obj) {
	// while(!Obj_IsDeleted(obj)){
		// ConcentrationA4Invert(obj,"HEXAGON",3,10,[127,90,100]);	
		// wait(60);
	// }	
// }




function ClearFam {
	let enemies = GetAllEnemyID;
	ascent(i in 0..length(enemies)) {
		if(enemies[i]!=boss){TDelete(enemies[i]);}
	}
	
	task TDelete(fam) {
		let a0 = Obj_GetValueD(fam,"Alpha",255);
		ascent(i in 0..60){
			ObjRender_SetAlpha(fam,a0-(a0/60)*i);
		}
		Obj_Delete(fam);
	}
}



function SetLaserSources(box,enable){
	let lasers = Obj_GetValueD(box,"Lasers",[]);
	ascent(i in 0..length(lasers)){
		ObjStLaser_SetSource(lasers[i],enable);
	}
	return lasers;
}