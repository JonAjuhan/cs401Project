#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Molten Pathos \"Cascade of Heaven\""]
#Text["..."] 
#BGM["./bgm/Solar Sect of Mystic Wisdom ~ Nuclear Fusion.mp3"]	//#BGM["./bgm - Last Word.ogg"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Stars.txt"]

#include "./Index.txt"


 

let type0 = 210;
let type1 = 212;
let type2 = 216;



@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	 //case(EV_REQUEST_IS_DURABLE_SPELL) {
		// SetScriptResult(true);
	 //}
	case(EV_REQUEST_TIMER) { SetScriptResult(4500); }
}
@Initialize
{
	SetCommonData("CurrentSC","Molten Pathos \"Cascade of Heaven\"");
	SetCommonData("Difficulty","Normal");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(16,64,16,16);
	
	//EnemyName(boss, "Andi", 255, 180, 255);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		SetBossHitbox(boss,ex,ey);
	}
	frame++;
	yield;
}


task MainTask {
	
	
	
	//ObjMove_SetDestAtFrame(boss, rand(cx+60, cx-60), rand(cy-120, cy-90), 60);
	ObjMove_SetDestAtFrame(boss, cx, cy-120, 60);
	
	SetSpellCard;
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,5760); //5760
	//TAfterImageBoss(boss,[255,255,255],1,1,15,3,BLEND_ADD_ARGB,0);
	SE_Play(nyaa,60);
	SetCaution;

	wait(90);
	
	ObjEnemy_SetDamageRate(boss,24,8);


	
	frame = 0;
	
//	TShoot;
	TBigShots;
//	Tmovement(cx-60,cx+60, cy,cy-60, 60,240, []); //[MOVE_PLAYERBIAS,2,0]

}





let N = 1; //3

let rad0 = 30;
//let rad1 = rad0+5*M;
let off0 = 90;
let coloff = 0;

task TShoot {
	let seobj = ObjSound_Create;
	let shot;
	let dir = 1;
	let ang;
	
	let ang0 = 150;
	let ang1 = 120; //240-(N-1)*6;
	
	let a = 0;
		
	while(!Obj_IsDeleted(boss)) {
		ascent(i in 0..15){
			shot = CreateShotB2(30*i,-5, 0,0, rand(0,0.05)*dir,0.1,  rand(0,0.25*dir),0.5, 212,0);
			ObjShot_SetSpellResist(shot,true);
		}
		wait(60);
	}
}



task TBigShots {
	let shot; let shots; let x; let y; let rad;
	let dummy = CreateShotA1(cx,cy-150,0,0,0,0);
	ObjShot_SetSpellResist(dummy,true);
	ObjShot_SetAutoDelete(dummy,false);
	
	while(!Obj_IsDeleted(boss)) {
		
		ConcentrationA1(boss,"HEXAGON",30,3,200,[255,0,255]);
		SE_Play(charge3,100);
		SetAttackPose(60);
		wait(60);
		
		//ang = AimBounce(ex,ey-15,px,py,1+xdir); //90+(40+rand(-10,10))*dir;
	//	shot = CreateShotA2(ex,ey-15,3,ang,-0.0,1.5, 782, 0); //823
		
		//make some suns
		shots = [];
		ascent(i in 0..7) { //8
			x = rand(0,sx); y = rand(0,sy); rad = 128*(0.5+0.45*i);
			let j=0;
			while(Distance(px,py,x,y)<=rad && j<100){
				x = (rand(0,sx)+rand(rad,sx-rad))/2; y = (rand(0,sy-rad)+rand(0,cy))/2; j++;
			}if(j>=100){let ang=rand(0,360); x=px+rad*cos(ang); y=py+rad*sin(ang);}
		//	shot = CreateSunShotA2(x, y, 0, 0, "SHRINK", 0.5+0.45*i, 0.05, 0.25+0.25*i, false, 255,180,128+15*i);
			shot = CreateSunShotA2(x, y, 0, 0, "SHRINK", 0.5+0.15*i, 0.05, 0.25+0.125*i, true,  255,180,0);
			Obj_SetValue(shot,"Alpha2",64);
			
			CustBounce(shot);
		//	CustWrap(shot);
			ObjShot_SetSpellResist(shot,true);
			ObjShot_SetAutoDelete(shot,false);
			shots = shots ~ [shot];
			
			SE_Play(se_explode,100);
			ObjMove_SetPosition(dummy,x,y);
			ConcentrationA4Invert(dummy,"HEXAGON",3+0.25*i,64*i,[255,0,200]);
			Obj_SetValue(shot,"IntersectionEnable",false);
			if(i<7){wait(max(30/max(i/cos(15*i),1),1));}
		}
		//make 'em go
		ascent(i in 0..length(shots)){
			shot = shots[i];
			ObjMove_AddPatternA2(shot,0, 0, 90, 0.05-0.0035*i, 0, 10);
//			ObjMove_AddPatternA2(shot,0, 0, GetAngleToPlayer(shot), 0.01, 0, 1);
		}
		
	//	SE_Play(se_explode,100);
	//	ConcentrationA4Invert(dummy,"HEXAGON",5,400,[255,0,200]);	
		
		wait(10);
		//
//		Obj_SetValue(shots[length(shots)-2],"IntersectionEnable",true);
		ascent(i in 0..length(shots)){
			shot = shots[i];
			Obj_SetValue(shots[i],"IntersectionEnable",true);
		}
		
		wait(50); //60 //75
		ObjMove_SetDestAtFrame(boss,rand(cx-60,cx+60),rand(cy,cy-60),60);
		SetBossBlur(true);
		wait(60);
		SetBossBlur(false);
	}
	
	
}








task CustBounce(shot) {
	let x; let y;
	x = ObjMove_GetX(shot); y = ObjMove_GetY(shot);
	while(y < sy) {
		yield;
		y = ObjMove_GetY(shot);
	}
	x = ObjMove_GetX(shot); y = ObjMove_GetY(shot);
	let rad = 81*ObjRender_GetScaleX(shot);
	let N=10+10*ObjRender_GetScaleX(shot)  /2;
	let A = 175/N;
	let nshot;
	ascent(i in 0..N){
		nshot = CreateShotA2(x+rad*cos(185+i*A),y-1+rad*sin(185+i*A),0,185+i*A, 0.05, 2.5, 710, 10);   //836
		BounceA1(nshot,1,[LFT,RGT,TOP]);
	}
	
	//murasa anchor noise
	SE_Play(se_anchor,100);
	
	ObjMove_SetSpeed(shot,0); ObjMove_SetAcceleration(shot,0);
	//ObjShot_FadeDelete(shot);
	Obj_SetValue(shot,"Delete","Expand");
	Obj_SetValue(shot,"ExpandRate",0.01/ObjRender_GetScaleX(shot));
	
	//Obj_Delete(shot);
}




// function CustWrap(shot) {
	// let x; let y; let scale;
	// task TCustWrap(shot) {
		// x = ObjMove_GetX(shot); y = ObjMove_GetY(shot);
		// scale = ObjRender_GetScaleX(shot);
		// while(!(x<-120*scale || y<-120*scale || x>sx+120*scale || y>sy+120*scale)){
			// yield;
			// x = ObjMove_GetX(shot); y = ObjMove_GetY(shot);
		// }
		// if(x<0||x>sx){ObjMove_SetX(shot,cx+(cx-x));}
		// if(y<0||y>sy){ObjMove_SetY(shot,cy+(cy-y));}
		// //ObjMove_SetY(shot,sy);
// //		ObjMove_AddPatternA3(shot,0,0,ang,0.05,0, 3.5, 146);
	// //	ObjMove_AddPatternA3(shot,0,NO_CHANGE,NO_CHANGE,NO_CHANGE,0,3.5,765);
	// }
	// TCustWrap(shot);
// }











