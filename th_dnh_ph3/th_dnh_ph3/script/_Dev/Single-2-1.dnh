#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["???"]
#Text["..."] 
#BGM["./bgm - Last Word.ogg"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Stars.txt"]

#include "./Index.txt"


let move = 3;
 


@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	// case(EV_REQUEST_IS_DURABLE_SPELL) {
		// SetScriptResult(true);
	// }
	case(EV_REQUEST_TIMER) { SetScriptResult(4500); }
}
@Initialize
{
	SetCommonData("CurrentSC","???");
	SetCommonData("Difficulty","\"Normal\"");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(64,32,64,32);
	
	EnemyName(boss, "Andi", 255, 180, 255);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		ObjEnemy_SetIntersectionCircleToShot(boss, ex, ey, 32); //hitbox against player bullets. 32 is the radius.
		ObjEnemy_SetIntersectionCircleToPlayer(boss, ex, ey, 24); //hitbox against the player. 24 is the radius.
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, rand(cx+60, cx-60), rand(120, cy-60), 60);
	
	SetSpellCard;
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,5760); //5760
	//TAfterImageBoss(boss,[255,255,255],1,1,15,3,BLEND_ADD_ARGB,0);
	
	wait(60);
	
	ObjEnemy_SetDamageRate(boss,24,8);

//	movement;
	
	frame = 0;
	
	TShoot;
//	Tmovement(cx-120,cx+120, cy-90,cy-40, 60,240, [MOVE_PLAYERBIAS,2,0]);
	
//	BulletWard(boss,100,[255,0,127]); //[255,0,0]
	
}





let M = 30;

let rad0 = 50;
let rad1 = rad0+5*M;
let off0 = 90;
let coloff = 0;

task TShoot {
	let seobj = ObjSound_Create;
	let seobj2 = ObjSound_Create;
	let shot; let shots;
	let x0; let y0; let x; let y; let mx; let my;
	let dir = -1;
	let c;
	let len;
		
	while(!Obj_IsDeleted(boss)) {
		shots = [];
		off0 = rand(0,360);
		//rad0 = 100+50*sin(frame);
		coloff = floor(rand(0,M));
		ascent(i in 0..M) {
	//		CoronaShot(x,y,speed,angle,angv,  scale,alpha,c, del)
			CoronaShot(ex+(rad0+5*i)*cos(off0+11*5*i), ey+(rad0+i)*sin(off0+11*i), 2.5, 90, rand(-0.5,0.5), 1.5,127, rainbow2((i+coloff)%M,M),45+3*i);
			if(i%3==0){SE_PlayA2(horn,100,seobj,30);}
			SE_PlayA2(se_chime,40,seobj2,30);
			wait(3);
		}
		wait(10);
		
		wait(20);
		SetAttackPose(40);
		wait(40);
		
		ascent(i in 0..72) {
			ascent(j in 1..5){
				shot = CreateShotA2(ex+rad0*cos(6*i),ey+rad0*sin(6*i),0,6*i,0.1*j,2*j, 49, 15);
			}
		}
		SE_Play(chime,100);
		wait(20);
		ObjMove_SetDestAtFrame(boss,(px+rand(cx-90,cx+90))/2,rand(cy-90,cy-40),45);
		wait(40);
	}
}






function corona(x,y,ang,scale,alpha, c) {
	let shot = CreateShotA1(x, y, scale, ang, 533, 0);
	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjShot_SetIntersectionEnable(shot,false);
	ObjShot_FadeDelete(shot);
	return shot;
}

task TCorona(x,y,scale,alpha,dur, c) {
	ascent(i in 0..dur) {
		corona(x,y,270+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
		yield;
	}
	let shot = AimedShot(x,y,scale,alpha,c);
	while(!Obj_IsDeleted(shot)) {
		corona(ObjMove_GetX(shot),ObjMove_GetY(shot),ObjMove_GetAngle(shot)+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
		yield;
	}
}

function AimedShot(x,y,scale,alpha,c) {
	let shot;

	shot = CreateShotA2(x,y,0,angleFrom(x,y),0.1,3,517,0); //831
//	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjRender_SetBlendType(shot,BLEND_ADD_ARGB);
	ObjShot_SetSpellResist(shot,true);

	return shot;
}



function CoronaShot(x,y,speed,angle,angv,  scale,alpha,c, del) {
	let shot = CreateShotA2(x,y,0,angle,0,0,0,0); //517
//	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjRender_SetBlendType(shot,BLEND_ADD_ARGB);
//	ObjShot_SetSpellResist(shot,true);
	ObjMove_AddPatternA3(shot,del,0,angle,0.1,angv,speed,517);
	
	task TCoronaShot(shot,angle,angv, scale,alpha,c,del) {
		ascent(i in 0..del) {
			corona(x,y,angle+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
			yield;
		}
		ObjShot_SetIntersectionEnable(shot,true);
		while(!Obj_IsDeleted(shot)) {
			corona(ObjMove_GetX(shot),ObjMove_GetY(shot),ObjMove_GetAngle(shot)+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
			yield;
		}
	}
	TCoronaShot(shot,angle,angv,scale,alpha,c,del);
	return shot;
}








task TFinalize() {
	
	
	SE_Play(spellbreak,100);
	DeleteShotAll(TYPE_ALL, TYPE_ITEM);
	PPCExplode(boss,[255,255,255]); PPCExplodeRainbow(boss);
	wait(15);
		
	
	Obj_Delete(boss);
	CloseScript(GetOwnScriptID());
	return;
	
	//ExplosionB2(boss,"HEART",[255,100,255],[255,100,255]);
	/*
	//ExplodeCherry(ex,ey,0.1);
	ExplodeRGB(ex, ey, 2, 1, 255, 255, 255);
	DeleteShotAll(TYPE_ALL,TYPE_ITEM);
	SE_Play(defeated,1000);
	StopSlow(TARGET_ALL);
	ascent(i in 0..60) {
		ObjRender_SetAlpha(boss, 255-i*4.25);
		yield;
	}
	//wait(60);
	Obj_Delete(boss);
	
	*/
	//CloseScript(GetOwnScriptID());
	//return;
}


//CreateSunShotA1(x, y, speed, angle, type, initScale, sizePerFrame, endScale, texture2, texture, r, g, b)