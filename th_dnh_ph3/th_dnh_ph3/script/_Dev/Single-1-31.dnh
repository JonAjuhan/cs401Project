#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Starlight \"Starfire Halo\""]
#Text["..."] 
#BGM["./bgm - Last Word.ogg"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Stars.txt"]

#include "./Index.txt"



let move = 4;
let finishing = false;




@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	// case(EV_REQUEST_IS_DURABLE_SPELL) {
		// SetScriptResult(true);
	// }
	case(EV_REQUEST_TIMER) { SetScriptResult(4500); }
}
@Initialize
{
	SetCommonData("CurrentSC","Starlight \"Starfire Halo\"");
	SetCommonData("Difficulty","\"Hard\"");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(64,32,64,32);
	
	EnemyName(boss, "Andi", 255, 180, 255);
	
	MainTask;
	

}
@MainLoop
{
	
	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		ObjEnemy_SetIntersectionCircleToShot(boss, ex, ey, 32); //hitbox against player bullets. 32 is the radius.
		ObjEnemy_SetIntersectionCircleToPlayer(boss, ex, ey, 24); //hitbox against the player. 24 is the radius.
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, rand(cx+60, cx-60), rand(120, cy-60), 60);
	
	SetSpellCard;
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,5760); //5760
	TAfterImageBoss(boss,[255,255,255],1,1,15,3,BLEND_ADD_ARGB,0);
	
	wait(60);
	
	ObjEnemy_SetDamageRate(boss,24,8);

	//movement;
	
	frame = 0;
	
	TShoot;
	
	
}



task movement {
	while(!Obj_IsDeleted(boss)) {
		alternative(move)
		case(1) {
			ObjMove_SetDestAtFrame(boss, cx+rand(-90,90), rand(60, cy-60), 120);
			wait(240);
		}
		//hang around center and move very slowly
		case(2) {
			ObjMove_SetDestAtSpeed(boss, (ex+cx)/2+rand(-30,30), (ey+cy)/2+rand(-30,30), 0.1); //0.1
			wait(240);
		}
		//hang around top and don't move too fast
		case(3) {
			ObjMove_SetDestAtSpeed(boss, (ex+cx)/2+rand(-40,40), (ey+cy)/2+rand(-60,-120), 0.3);
			wait(240);
		}
		//go roughly above player
		case(4) {
			ObjMove_SetDestAtFrame(boss, (px*2+cx)/3+rand(-60,60), rand(60, cy-60), 120);
			wait(240);
		}
	}
}


let M = 6; //3
let N = 40*M; //60
if(N/M%1!=0){N=ceil(N/M)*M;}
let NM = N/M;

let rad0 = 50;
let rad1 = 150;
let off0 = 90;
let coloff = 0;

task TShoot {
	let seobj = ObjSound_Create;
	let shot; let shots;
	let x0; let y0; let x; let y; let mx; let my;
	let dir = -1;
	let c;
		
	while(!Obj_IsDeleted(boss)) {
		shots = [];
		off0 = rand(0,360);
		
		SE_Play(se_chime,70);
		coloff = floor(rand(0,M));
		ascent(j in 0..M) {
			c = rainbow2((j+coloff)%M,M);
			ascent(i in 0..NM) {
				shot = CreateShotA2(ex+rad0*cos(360/NM*i),ey+rad0*sin(360/NM*i),0, rand(0,360), 0.05,1.5,518+(i%7),15); //533
				// if(i%7==0) {
					// x = ex+50*cos(360/N*j+360/N*M*i);
					// y = ey+50*sin(6*j+360/N*M*i);
					// ObjMove_SetDestAtFrame(shot,x,y,30);
				// }
				//ObjShot_SetSpellResist(shot,true);
				ObjRender_SetAlpha(shot,230); //200
		//		ObjRender_SetColor(shot,c[0],c[1],c[2]);
				//ObjRender_SetColor(shot,127+(c[0]-127)*2,127+(c[1]-127)*2,127+(c[2]-127)*2);
				shots = shots ~ [shot];
			}
		}
		wait(30);
		ascent(j in 0..M) {
			TCorona(ex+rad0*cos(off0+360/M*j),ey+rad0*sin(off0+360/M*j),1.5,127,60+15*j, rainbow2((j+coloff)%M,M));
		}
		ConcentrationA2(boss,"HEART",40,3,100,[255,100,200]); //255,100,255
		SE_Play(charge3,70);
	//	shift(shots,rad1,off0+360/M/2,1);
		wait(90);
		ObjMove_SetDestAtFrame(boss, cx+rand(-90,90), rand(60, cy-60), 120);
		wait(90);
		//wait(30);
		ascent(j in 0..M) {
			ascent(i in 0..NM) {
				shot = shots[j*NM+i];
				ObjMove_AddPatternA2  (shot,0, 0, i*360/NM, 0.025,0.5*(2*(i%2-0.5)), 2);
				//ObjMove_AddPatternA2  (shot,0, 0, off0+45+360/N*j+360/NM*i, 0.05,0.5*(2*(i%2-0.5)), 2);
				//ObjMove_AddPatternA2(shot,0, 0, 360/NM*j+360/NM*i, 0.05,-0.5, 2);
				//ObjMove_AddPatternA2(shot,0, 0, 360/M*((j+i)%M)+360/NM*i, 0.05,-0.5, 2);
			}
		}
		SE_Play(se_chime,70);
		wait(60);
	}
}


// task shift(shots,rad,off,dir) {
	// let shot;
	// let mx = [];
	// let my = [];
	// let x0; let y0; let x; let y;
	// let mx0 = []; let my0 = [];
	// loop(M){ mx0=mx0~[0];my0=my0~[0];}
	
	// ascent(i in 0..M) {
		// mx = mx ~ [ex+rad*cos(off+360/M*i*dir)];
		// my = my ~ [ey+rad*sin(off+360/M*i*dir)];
		// TCorona(mx[i],my[i],2,200,180, rainbow2((i+coloff)%M,M));
	// }
	// ObjMove_SetDestAtFrame(boss, (px*2+cx)/3+rand(-60,60), rand(60, cy-60), 120);
	// wait(60); 
	// ascent(j in 0..M) {
		// ascent(i in 0..NM) {
			// shot = shots[j*NM+i];
			// x0 = ObjMove_GetX(shot); y0 = ObjMove_GetY(shot);
			// mx0[j] = mx0[j]+x0; my0[j] = my0[j]+y0;
			// x = mx[j]+rad0*cos(360/N*j+360/NM*i);
			// y = my[j]+rad0*sin(360/N*j+360/NM*i);
			// ObjMove_SetX(shot,x); ObjMove_SetY(shot,y);
			// //bulletArc(x0, y0, x, y, Distance(x0,y0,x,y)/5, dir, 90, 533, 128, rainbow2((j+coloff)%M,M), 0,0.1, 10); //533
			// //wait(2);
		// }
		// mx0[j]=mx0[j]/NM; my0[j]=my0[j]/NM;
		// bulletArc(mx0[j],my0[j],mx[j],my[j], Distance(mx0[j],my0[j],mx[j],my[j])/2.5, dir, 90, 775, 180, rainbow2((j+coloff)%M,M), 0, 0.25, 10); //533 //30 //[255,150,200]
		// wait(15);
		// //dir*=-1;
	// }	
// }



function corona(x,y,ang,scale,alpha, c) {
	let shot = CreateShotA1(x, y, scale, ang, 533, 0);
	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjShot_SetIntersectionEnable(shot,false);
	ObjShot_FadeDelete(shot);
	return shot;
}

task TCorona(x,y,scale,alpha,dur, c) {
	ascent(i in 0..dur) {
		corona(x,y,270+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
		yield;
	}
	let shot = AimedShot(x,y,scale,alpha,c);
	while(!Obj_IsDeleted(shot)) {
		corona(ObjMove_GetX(shot),ObjMove_GetY(shot),ObjMove_GetAngle(shot)+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
		//AfterImageShot(shot,[255,255,255],0.1,15);
		yield;
	}
}

function AimedShot(x,y,scale,alpha,c) {
	let shot = CreateShotA2(x,y,0,angleFrom(x,y),0.1,3,831,0);
	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjShot_SetSpellResist(shot,true);
	return shot;
}





// task line(y,x0,dir,gap,gapscale,del,warn,dur) {
	// let shot; let shots = [];
	// let x = x0;
	// wait(del);
	// ascent(i in 0..10) {
		// x += gap*dir + gap*dir*(gapscale*i);
		// shot = CreateShotA1(x,y,0,90, 533, 0);
		// ObjRender_SetColor(shot,200,0,128);
		// Phase2(shot,warn,0,250);
		// ObjShot_SetSpellResist(shot,true);
		// shots = shots ~ [shot];
	// }
	// wait(dur+warn);
	// ascent(i in 0..10) {
		// ObjShot_FadeDelete(shots[i]);
	// }
	
// }





// function sweep() {
	// let xmspd = -2;
	// let yspd = 2.5;
	// let turndel = 30;
	// let xmacc = 0.0725 * xmspd * (2/yspd);
	// let shot;
	// ascent(i in 0..20) {
		// shot = CreateShotB2(x0+sign(i-10)*(length/2 + i * 20),-60, 0,yspd, 0,-0.05, 0,yspd, 533, 0);
		// ObjRender_SetColor(shot,255-i*3,0,i*3);
		// Phase2(shot,45,0, 155);
		// ascent(j in 0..10) {
			// ObjMove_AddPatternB2(shot,turndel/2+j*turndel,NO_CHANGE,NO_CHANGE,xmacc*2*(j%2-0.5),NO_CHANGE,xmspd*2*(j%2-0.5),yspd+0.15*(i%2));
		// }
	// }
// }







task TFinalize() {
	
	
	SE_Play(spellbreak,100);
	DeleteShotAll(TYPE_ALL, TYPE_ITEM);
	PPCExplode(boss,[255,255,255]); PPCExplodeRainbow(boss);
	wait(15);
		
	
	Obj_Delete(boss);
	CloseScript(GetOwnScriptID());
	return;
	
	//ExplosionB2(boss,"HEART",[255,100,255],[255,100,255]);
	/*
	//ExplodeCherry(ex,ey,0.1);
	ExplodeRGB(ex, ey, 2, 1, 255, 255, 255);
	DeleteShotAll(TYPE_ALL,TYPE_ITEM);
	SE_Play(defeated,1000);
	StopSlow(TARGET_ALL);
	ascent(i in 0..60) {
		ObjRender_SetAlpha(boss, 255-i*4.25);
		yield;
	}
	//wait(60);
	Obj_Delete(boss);
	
	*/
	//CloseScript(GetOwnScriptID());
	//return;
}


//CreateSunShotA1(x, y, speed, angle, type, initScale, sizePerFrame, endScale, texture2, texture, r, g, b)