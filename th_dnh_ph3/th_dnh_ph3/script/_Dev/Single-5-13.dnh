#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Summoning \"Stando powa\""]
#Text["..."] 
#BGM["./bgm/bgm - A Maiden's Illusionary Funeral ~ Necro-Fantasy.ogg"]						//"./bgm/bgm - Bhava-Agra As Seen Through a Child's Mind.mp3"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Sky.txt"]

#include "./Index.txt"


let fog; let ingap; let outgap;

let timer = 57; //30

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	case(EV_REQUEST_IS_DURABLE_SPELL) {
		SetScriptResult(true);
	}
//	case(EV_REQUEST_IS_LAST_SPELL){
//		SetScriptResult(true);
//	}
	
	case(EV_REQUEST_TIMER) { SetScriptResult(timer*60); } //4500
}
@Initialize
{
	SetCommonData("CurrentSC","Boundary \"Button of N Hat Lolis and N+1 Hat Lolis\"");
	SetCommonData("Difficulty","Phantasm");
	
	boss = spawnBossYukari();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(64,96,64,64);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		SetBossHitbox(boss,ex,ey);
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, cx, cy-120, 60);
	
	SetSpellCard;
//	MCircNextAlpha = 80;
//	Obj_SetValue(objSpellCircle,"MaxAlpha",64);
	
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760
	
//	SetCaution;


	AuraRainbow(boss,255,255,255);
	TSpellImmune;
	
	wait(90);
	frame = 0;

	TFog;

	

	ObjEnemy_SetDamageRate(boss,24,8);
	DispenseHatLolis;
	TSafespotTrain;
	Tmovement(cx-120,cx+120, cy-90,cy-60, 60,240, [MOVE_PLAYERBIAS,2,0,MOVE_MAXSPEED,1.5] );

}





let DAI = 0; let KOISHI = 1; let KOA = 2; let CAT = 3; let KASEN = 4; let TEWI = 5;
let MYON = 6; let UDONGE = 7; let NAZ = 8; let CHIKUN = 9; let ORINDANCE = 10; 
let KOISHIDANCE = 11; let KAGEROU = 12; let NAMUSAN = 13; let AWOO = 14; let SPINNER = 15;

task ShikiGap(x,y,a,type){
	let outgap = CreateGapA1(x,y ,70,25 ,a ,40,0 , GAP_OUT,TARGET_ENEMY,0     ,[]);
	let shiki;
	wait(30);
	//shiki = CreateSignA2(x,y,0,a, 0.15, 3.5, i, 60);
	//shiki = CreateShikigamiA2(x,y,0,a,0.15,3.5,0,type,30,true,0);
	
	let spd = 0;	//0
	let acc = 0.15;	//.15
	let msp = 3.5;	//3.5
	let angv = 1;	//0
	let del = 0;	//0
	let spin = 1*randSign;
	
	let scale = 1;
	
	alternative(type)
	case(DAI){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_daiyousei","dot",[2,0],spin,true,del);
		AnimateShikigami(shiki,2,[ [0,0],[0,1],[0,2],[0,3] ]);
	}
	case(KOISHI){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_koishi","dot",[2,0],spin,true,del);
		AnimateShikigami(shiki,3,[ [4,0],[4,1],[4,2],[4,2],[4,1],[4,0],[6,0],[6,1],[6,2],[6,3],[6,3],[6,2],[6,1],[6,0] ]);
	}
	case(KOA){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_koakuma","dot",[2,0],spin,true,del);
		AnimateShikigami(shiki,2,[ [2,0],[2,1],[2,0],  [1,0],[1,0,-1],  [2,2,1],[2,3],[2,2], [1,0,-1],[1,0,1]  ]);
	}
	case(CAT){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"CatSASprite","zun50",[0,0],spin,true,del);
		AnimateShikigami(shiki,4,[ [0,0],[1,0] ]);
	}
	case(KASEN){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_kasen","dot",[4,1],spin,true,del);
		AnimateShikigami(shiki,4,[ [4,1],[4,2],[4,1],[3,2]  ]);
	}
	case(TEWI){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_tewi","dot",[5,0],spin,true,del);
		AnimateShikigami(shiki,4,[ [5,0],[5,1],[5,2],[5,1]  ]);
	}
	case(MYON){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_youmu","dot",[5,1],spin,true,del);
		AnimateShikigami(shiki,4,[ [5,1,1],[5,0],[5,1,-1],[5,0]  ]);
	}
	case(UDONGE){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_reisen","dot",[4,2],spin,true,del);
		AnimateShikigami(shiki,5,[ [4,2],[3,2,1],[4,2],[3,2,-1],[4,2],[5,2]  ]);
	}
	case(NAZ){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"NazrinUFOSprite","zun",[3,3],spin,true,del);
		AnimateShikigami(shiki,3,[ [3,2],[3,2],[2,2],[1,2],[0,2],[0,2,-1],[1,2],[2,2],[3,2],[3,2],[2,2],[1,2],[0,2],[0,2,1],[1,2],[2,2]  ]);
	}
	case(CHIKUN){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"MokouINSprite","zun",[3,3],spin,true,del);
		AnimateShikigami(shiki,3,[ [3,2],[3,2],[2,2],[1,2],[0,2],[0,2],[0,2,-1],[1,2],[2,2],[3,2],[3,2],[2,2],[1,2],[0,2],[0,2],[0,2,1],[1,2],[2,2]  ]);
	}
	case(ORINDANCE){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"../../img/misc/dancerin",[100,123],[0,0],spin,true,del);
		AnimateShikigami(shiki,5,[ [0,0],[2,0],[0,1],[2,1]  ]);
		scale = 0.75;
	}
	case(KOISHIDANCE){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"../../img/misc/dancekoishi",[126,218],[0,0],spin,true,del);
		AnimateShikigami(shiki,5,[ [1,0],[2,0]  ]);
		scale = 0.5;
	}
	case(KAGEROU){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"dot_kagerou","dot",[2,2],spin,true,del);
		AnimateShikigami(shiki,4,[ [2,2],[2,1],[2,2,-1],[2,3,1] ]);
	}
	case(NAMUSAN){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"ByakurenUFOSprite",[96,128],[3,1],spin,true,del);
		AnimateShikigami(shiki,3,[ [3,1],[2,1],[1,1],[0,1],[0,2],[1,2],[2,2],[3,2],[3,2],[2,2],[1,2],[0,2],[0,1],[1,1],[2,1],[3,1] ]);
		scale = 0.75;
	}
	case(AWOO){
		shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"MomijiDSSprite",[64,64],[3,1],spin,true,del);
		AnimateShikigami(shiki,3,[ [3,1],[2,1],[1,1],[0,1],[0,2],[1,2],[2,2],[3,2],[3,2],[2,2],[1,2],[0,2],[0,1],[1,1],[2,1],[3,1] ]);
	}
	
	
	
	ObjMove_SetAngularVelocity(shiki,rand(-0.5,0.5));
//	ObjMove_AddPatternA2(shiki,60,NO_CHANGE,NO_CHANGE,NO_CHANGE, 0, 3.5);
	Aim(shiki,1,120);
	GrowShot(shiki,0,scale,15);
	
	SE_Play(se_gapshot,100);
	//wait(randint(1,5));
}


task DispenseHatLolis {
	let a;
	
	let N = 15; let dA = 360/N*2.5; let rad = 100;
	while(!Obj_IsDeleted(boss)){
		a=rand(0,360);
		ascent(i in 0..N){
			SetAttackPose(7);
			ShikiGap(px+rad*cos(a+dA*i),py+rad*sin(a+dA*i),a+dA*i+180, i);
			wait(15);
		}
	}
	
}

// case(5){	//boat
		// shiki = CreateShikigamiA3(x,y,0,a,0.15,3.5,0,"FutoTDSprite",[200,100],[0,4],1,true,0);
		// //AnimateShikigami(shiki,4,[ [4,1],[4,2],[4,1],[3,2]  ]);
	// }
	// case(510){
		// shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"../../img/misc/nozomi",[102,102],[0,0],spin,true,del);
		// //AnimateShikigami(shiki,3,[ [3,2],[3,2],[2,2],[1,2],[0,2],[0,2],[0,2,-1],[1,2],[2,2],[3,2],[3,2],[2,2],[1,2],[0,2],[0,2],[0,2,1],[1,2],[2,2]  ]);
		// scale = 0.5;
	// }
	// case(511){
		// shiki = CreateShikigamiA3(x,y,spd,a,acc,msp,angv,"../../img/misc/granddad",[97,128],[0,0],spin,true,del);
		// //AnimateShikigami(shiki,3,[ [3,2],[3,2],[2,2],[1,2],[0,2],[0,2],[0,2,-1],[1,2],[2,2],[3,2],[3,2],[2,2],[1,2],[0,2],[0,2],[0,2,1],[1,2],[2,2]  ]);
		// scale = 0.5;
	// }

task Aim(shot,sp,t){
	loop(t){
		TurnToPoint(shot, sp, px, py);
		yield;
	}
}



task SignGap(x,y,a){
	let outgap = CreateGapA1(x,y ,70,25 ,a ,40,0 , GAP_OUT,TARGET_ENEMY,0     ,[]);
	let sign;
	wait(30);
	ascent(i in 0..3){
		sign = CreateSignA2(x,y,0,a, 0.15, 3.5, i, 60);
		ObjMove_SetAngularVelocity(sign,rand(-0.5,0.5));
		ObjMove_AddPatternA2(sign,60,NO_CHANGE,NO_CHANGE,NO_CHANGE, 0, 3.5);
		SE_Play(se_gapshot,100);
		wait(randint(1,5));
	}
}



//CreateShikigamiA2(x,y,spd,ang,acc,mspd,angv,type,spin,collision,del)






task TFog {
	
	let targ = CreateDummyShot(cx,cy); 
	
	//"Clouds"
	fog = NightBlindA1(300,300,0,  0,255,120);
	ObjRender_SetColor(fog,255,128,255);
	ObjRender_SetBlendType(fog,BLEND_ADD_ARGB);
	Obj_SetValue(fog,"Target",targ);
	Obj_SetValue(fog,"RotSpeed",5); //3
	Obj_SetValue(fog,"Check",false);
	
	let c;
	while(!Obj_IsDeleted(boss)){
		c=rainbow2(180+frame,900);
		ObjRender_SetColor(fog,c[0],c[1],c[2]);
		yield;
	}
	
	
	
}




//if the player tries to hide above her, they get train'd
task TSafespotTrain {
	

	
	while(!Obj_IsDeleted(boss)){
	//	if(py<ey){wait(60);if(py<ey){
		wait(240);
			//Get train'd on
			let dir = boolSign(px>cx); let y = (90+2*py)/3;
			CreateGapA1(cx+cx*dir,y,200,50,90+90*dir,90,0,  GAP_OUT,TARGET_ENEMY, 0, []);
			if(absolute(y-ey)<100) { SetBossBlur(true); }
			wait(30);
			CreateTrainA2(cx+(cx+250)*dir,y,0,90+90*dir,0.15,15,-0.05*dir,0);
			SE_Play(se_train,200); SE_Play(se_tracks,200);
			wait(50);
			CreateGapA1(cx-cx*dir,y+30,200,50,90-90*dir,40,0,  GAP_VOID,TARGET_ENEMY, 0, []);
			wait(120);
			SetBossBlur(IsPlayerSpellActive);
	//	}}
		yield;
	}
}




	

