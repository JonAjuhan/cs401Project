#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["\"The Great Lever That Moves All Gensokyo\""]
#Text["..."] 
#BGM["./bgm/bgm - Hartmann's Youkai Girl.ogg"] //Bhava-Agra As Seen Through a Child's Mind.mp3"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Sky.txt"]

#include "./Index.txt"

let timer = 77; //37
let shot;

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	case(EV_REQUEST_IS_DURABLE_SPELL) {
		SetScriptResult(true);
	}
//	case(EV_REQUEST_IS_LAST_SPELL){
//		SetScriptResult(true);
//	}
	
	case(EV_REQUEST_TIMER) { SetScriptResult(timer*60); }
}
@Initialize
{
	SetCommonData("CurrentSC","\"The Great Lever That Moves All Gensokyo\"");
	SetCommonData("Difficulty","Extra");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	//SetShotAutoDeleteClip(64,96,64,64);
	SetShotAutoDeleteClip(16,16,16,16);
	
	MainTask;
	

}
@MainLoop
{

	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
		SetBossHitbox(boss,ex,ey);
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, cx, cy-120, 60);
	
	SetSpellCard;
//	MCircNextAlpha = 80;
//	Obj_SetValue(objSpellCircle,"MaxAlpha",64);
	
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,timer*60); //5760
	
	SetCaution;
	//SetBossBlur(true);
	AuraRainbow(boss,255,255,255);
	TSpellImmune;

	//ConcentrationA2(boss,"HEXAGON",90,3,10,[255,0,255]);
		
	wait(90);
	Tmovement(cx-120,cx+120, cy-90,cy-60, 60,240, [MOVE_PLAYERBIAS,2,0,MOVE_MAXSPEED,1.5] );
	ObjEnemy_SetDamageRate(boss,24,8);
	frame = 0;

	
	TGreatLever;
	SetBossBlur(true);
	wait(90);
	SetBossBlur(false);
	ObjRender_SetBlendType(boss,BLEND_ADD_ARGB);
	Obj_SetRenderPriorityI(boss,79);
	ascent(i in 0..120){
		ObjRender_SetAlpha(boss,i*255/120);
		yield;
	}
	TShoot;
}







task TShoot {
	
	let shot;

	let types = [DOT_MAGENTA+500,DOT_BLUE+500];
	
	let count = 0; let dir = 1; let ydir;
	let sa;
	
	while(!Obj_IsDeleted(boss)) {
		//SE_Play(se_chime2,rand(30,rand(50,rand(60,rand(70,100)))));
		SE_Play(dirse~"shot"~itoa(randint(1,8))~".wav",rand(30,rand(50,rand(60,rand(70,100)))));
		
		shot = CreateShotA2(swdx,swdy,0,90+(180*sin(count/180))+count*sin(count), 0.01+sin(count),1.5, BALL_MAGENTA+500, rand(5,10) );
		setvals(shot,["Acceleration","MaxSpeed"],[sin(count), 1.5]);
		Trail(shot);
		loop(5){yield; count++;}
	}
}

task Trail(shot){
	let cpy;
	wait(rand(0,10));
	while(!Obj_IsDeleted(shot)){
		cpy = CopyShot(shot);
		ObjMove_SetAngle(cpy,geta(shot)+rand(-15,15));
		//ObjMove_SetAngularVelocity(cpy,rand(-0.15,0.15));
	//	ObjMove_SetSpeed(cpy,0);
	//	ObjMove_SetAcceleration(cpy,getval(cpy,"Acceleration")-rand(0,0.5));
		ObjMove_SetMaxSpeed(cpy,getval(cpy,"MaxSpeed")-rand(0,0.5));
		wait(rand(20,40));
	}
}



function TPlayerGap(x,y,rad,spd){
	//let x = cx; let y = cy+120; let rad = 50; let spd = 0.5;
	let circ = InfluenceCircleA1(x,y,rad,INFL_REVOLVE,spd,0);
	//let circ = InfluenceCircleA1(x,y,rad,INFL_AIMACCEL,[0.1,3],GetPlayerObjectID);
	//let circ = InfluenceCircleA1(x,y,rad,INFL_ACCEL,[0,0],NULL);
	setval(circ,"IsProp",true);
	setcolor(circ,[64,0,255]);
	ObjRender_SetBlendType(circ,BLEND_MULTIPLY);
	let dist; let ang; //let plr = GetPlayerObjectId;
	Update;
	ObjRender_SetColor(getval(circ,"RenderObject"),128,0,64);
	//TWheel(circ,spd);
	return circ;
	
	task Update{
		while(!Obj_IsDeleted(circ)){
			rad = 116*ObjRender_GetScaleX(circ);
			x=getrx(circ); y=getry(circ);
			dist = getdist(px,py,x,y);
			spd = getvald(circ,"Mag",spd);
			if(dist < rad){
				ang = getangle(px,py,x,y)+180; //+180
				setpos(GetPlayerObjectID,x+(dist)*cos(ang+spd),y+(dist)*sin(ang+spd));
				//Set2DCameraAngleZ(Get2DCameraAngleZ+0.5);
			//	SE_Play(se_warp,100);
			}
			yield;
		}
	}
}


task TGreatLever{
	
	let circ = TPlayerGap(sx,sy-60,0,0);
	setval(circ,"Update",true);
	
	Noise;
	task Noise{
		while(!Obj_IsDeleted(circ)){
			SE_Play(se_tracks,100);
			wait(90);
		}
	}
	
	
	ascent(i in 0..120){
		ObjRender_SetScaleXYZ(circ,sx*1.75/128*i/120,sx*1.75/128*i/120,1);
		setval(circ,"Mag",-(i/240) );
		yield;
	}
	
	let c = 0;
	while(!Obj_IsDeleted(circ)){
		ObjRender_SetX(circ,cx+cx*cos(c));
		//setval(circ,"Mag",  -0.5*cos(c/2)  );
		setval(circ,"Mag",  min( (| 3*cos(c/10) |), 1 ) *sign(-cos(c/10))     );
		yield; c++; //if( (|cos(c/10)|)<0.2){c+=2;}
	}
	
}





