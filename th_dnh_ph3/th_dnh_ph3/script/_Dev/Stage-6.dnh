#TouhouDanmakufu[Stage]
#ScriptVersion[3]
#Title["Stage-6"]
#Text["A test stage"]
#Image["./ExRumia(星符「ミッドナイトレヴァリエ」).jpg"]

#include "./Index.txt"
#System["./system/Default_System.txt"]
#Background["./system/Background_Sky.txt"]

#BGM["./bgm/bgm - CC-CGR-loop.ogg"]

//
#include "./Library/Fairies.txt"
#include "./Library/FairyPatterns.dnh"

let bossScript;

@Loading{
	InstallFont(GetCurrentScriptDirectory() ~ "img/Helvetica.otf"); //.otf for One True Font
	//Preload the boss plural
	bossScript = LoadScriptInThread(GetCurrentScriptDirectory~"./Plural-6.dnh");
}

@Initialize
{
	SetCommonData("IsStage",true);
	SetCommonData("Difficulty",NORMAL);
	TStage();
}

@MainLoop{
	yield;
}

@Finalize
{
}


task TStage
{
	let dir = GetCurrentScriptDirectory();

	//ボス再生
	// let path = dir ~ "Plural-6.dnh";
	loop(60){yield;}//1秒くらいあれば、コンパイル完了すると思われる。
	
	//A bunch of basic fairies coming down randomly
	//just an example, don't emulate this
	loop(15){
		TFairy1(rx,-30,1.5,rand(45,135));
		wait(30);
	}
	
	//Some other patterns defined in FairyPatterns.dnh
	//these are also test patterns - they're too hard IIRC
	loop(3){
		ascent(i in 0..5){
			TYinYang1(0,50+50*i,3,0);
			TBunnyFairy1(sx-50+(cx-50)/6*i,-20,3,135);
			TBunnyFairy1(0 +50-(cx-50)/6*i,-20,3,45);
			wait(30);
		}
		wait(150);
		ascent(i in 0..5){
			TSpirit1(cx+(100+20*i)*altSign(i),sy+20,3,270);
			wait(15);
		}	
		wait(150);
	}
	
	//Clean up any leftover shots
	loop(150){
		DeleteShotAll(TYPE_ALL,TYPE_FADE);
		yield;
	}
	//Start the boss plural
	StartScript(bossScript);
	while(!IsCloseScript(bossScript) && GetPlayerState() != STATE_END)
	{
		yield;
	}
	loop(240){yield;}
	CloseStgScene();
}





//A basic fairy that fires aimed shots and extra aimed streams going around
task TFairy1(x,y,s,a){
	let fairy = SpawnFairy(x,y,"red","PoFV",10,100);
	let col = randint(0,7); //slapdash measure to make it easier to see what they're doing - make each one fire a random color of shots
	ObjMove_SetSpeed(fairy,s);
	ObjMove_SetAngle(fairy,a);
	wait(60);
	let shot; let fx; let fy; let count=0; let off=0; let da=13;
	while(!(ObjEnemy_GetLife(fairy)==0)){
		fx=ObjMove_GetX(fairy); fy=ObjMove_GetY(fairy); //update each frame with the fairy's position
		a = GetAngleToPlayer(fairy);
		SE_Play(se_shot3,50);
		
		let n = altBin(count); //0 or 1
		ascent(i in n..2){ //only shoot the ones aimed straight at the player every other time
			shot = CreateShotA1(fx,fy,2.5,a+off*i,DOT_WHITE+col,5);
			shot = CreateShotA1(fx,fy,2.5,a-off*i,DOT_WHITE+col,5);
		}
		wait(10); off+=da; count++;
	}
}

