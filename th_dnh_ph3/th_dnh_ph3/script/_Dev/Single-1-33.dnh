#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Starfire \"Overdrive Heart\""]
#Text["..."] 
#BGM["./bgm - Last Word.ogg"]
#System["./system/Default_System.txt"]
#Background["./system/Background_Stars.txt"]

#include "./Index.txt"

//let boss; //Enemy object
//let objScene = GetEnemyBossSceneObjectID();
let move = 1;
let finishing = false;


@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_SPELL_SCORE){
        SetScriptResult(5000000);
    }
	// case(EV_REQUEST_IS_DURABLE_SPELL) {
		// SetScriptResult(true);
	// }
	case(EV_REQUEST_TIMER) { SetScriptResult(4500); }
}
@Initialize
{
	SetCommonData("CurrentSC","Starfire \"Overdrive Heart\"");
	SetCommonData("Difficulty","\"Extra\"");
	
	boss = spawnBoss();
	
	ObjEnemy_SetDamageRate(boss,0,0);
	SetShotAutoDeleteClip(32,32,32,32);
	EnemyName(boss, "Andi", 255, 180, 255);
	
	MainTask;
	

}
@MainLoop
{
	if(ObjEnemy_GetInfo(boss, INFO_LIFE) <= 0 && !finishing)
	{
		finishing = true;
		TBreakSpell([]);
	}
	else {
	//	ObjEnemy_SetIntersectionCircleToShot(boss, ex, ey, 32); //hitbox against player bullets. 32 is the radius.
		ObjEnemy_SetIntersectionCircleToPlayer(boss, ex, ey, 24); //hitbox against the player. 24 is the radius.
	}
	frame++;
	yield;
}


task MainTask {
	
	ObjEnemy_SetDamageRate(boss,0,0);
	ObjMove_SetDestAtFrame(boss, rand(cx+60, cx-60), rand(120, cy-60), 60);
	
	MCircAlpha = 0; //MagicCircleType = MAGICCIRCLE_WHITE;
	SetSurvivalCard;
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene,2000); //5760
	
	
	Sunfire;	
	wait(60);
	
	ObjEnemy_SetDamageRate(boss,24,8);

	Tmovement(90,sx-90,90,sy-90,120,60,[MOVE_PLAYERBIAS,2,1]);
	
	frame = 0;
	
	TShoot;
	
//	TAfterImagePlayer([255,0,0,200],1,9,3,BLEND_ADD_ARGB,0);
// 	yield;
//	TAfterImagePlayer([0,255,0,200],1,9,3,BLEND_ADD_ARGB,0);
//	yield;
//	TAfterImagePlayer([0,0,255,200],1,9,3,BLEND_ADD_ARGB,0);
//	TAfterImagePlayer([255,0,0],1,6,2,BLEND_ADD_ARGB,0);
//	BulletWard(boss,100,[255,0,127]); //[255,0,0]
	
}






let M = 30; //6, 16, 1
let N = 40*M; //60, 40
if(N/M%1!=0){N=ceil(N/M)*M;}
let NM = N/M;

let rad0 = 100;
let rad1 = 150;
let rad = rad0;
let off0 = 90;
let coloff = 0;

task TShoot {
	let seobj = ObjSound_Create;
	let shot; //let shots;
	let x0; let y0; let x; let y; let mx; let my;
	let dir = -1;
	let c;
	let len;
	
	MCircNextPeriod = 90;
	MCircRotSpd = 13;
	MCircNextAlpha = 180; //220
	MCircAlpha = 200; //255
	
	
	while(!Obj_IsDeleted(boss)) {
	//	shots = [];

		ascent(i in 0..18) {
			rad = rad0+rad1*sin(frame);
		//	off0 += rand(0,15); //5
			off0 += rand(rand(-5,5),rand(5,20));
			//coloff += 0.1;
			
			AimedCoronaShot(cx+rad*cos(off0),cy+rad*sin(off0),1.5,127, rainbow2(frame,70), 60);
		//	TCorona(cx+rad*cos(off0),cy+rad*sin(off0),1.5,127,60+15*j, rainbow2((j+coloff)%M,M)); //del 60+15*j
		//	TCorona(cx+rad*cos(frame*2),cy+rad*sin(frame*2),1.5,127,60+15*j, rainbow2((j+coloff)%M,M)); //del 60+15*j
			//SE_PlayA2(horn,100,seobj,30);
			SE_PlayA2(splash,45,seobj,5);
			wait(5);
		}
		
		ascent(i in 0..M) {
			CoronaShot(ex+50*cos(off0+i*360/M),ey+50*sin(off0+i*360/M), 3, off0+i*360/M,rand(-0.75,0.75),  1.75,127, rainbow2(i,M),15);
		}
		SE_Play(explode,200);
		AfterImageCircle(ex,ey,[255,127,0,255],1,3,30,BLEND_ADD_ARGB,53);
		AfterImageCircle(ex,ey,[127,0,0,127],1,10,30,BLEND_ADD_ARGB,81);
		TintScreen([255,0,0,127],60);
	//	AfterImageCircle(ex,ey,[0,0,0,127],4,-4,15,BLEND_MULTIPLY,54);	
	
	}
}






function corona(x,y,ang,scale,alpha, c) {
	let shot = CreateShotA1(x, y, scale, ang, 533, 0);
	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjShot_SetIntersectionEnable(shot,false);
	ObjShot_FadeDelete(shot);
	return shot;
}


function AimedCoronaShot(x,y,scale,alpha,c, del) {
	let shot;
	//shot = CreateShotA2(x,y,0,angleFrom(x,y),0.1,3,517,0); //831
	shot = CreateShotA2(x,y,0,angleFrom(x,y),0,0,0,0); //517
//	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjRender_SetBlendType(shot,BLEND_ADD_ARGB);
	ObjShot_SetSpellResist(shot,true);
//	ObjShot_SetIntersectionEnable(shot,false);
	ObjMove_AddPatternA4(shot,del,0,0,0.1,0,3,GetPlayerObjectID,517);
	
	task TAimedCoronaShot(shot,scale,alpha,c,del) {
		ascent(i in 0..del) {
			ObjMove_SetAngle(shot,angleFrom(x,y));
			corona(x,y,angleFrom(x,y)+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
			yield;
		}
		ObjShot_SetIntersectionEnable(shot,true);
		while(!Obj_IsDeleted(shot)) {
			corona(ObjMove_GetX(shot),ObjMove_GetY(shot),ObjMove_GetAngle(shot)+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
			yield;
		}
	}
	TAimedCoronaShot(shot,scale,alpha,c,del);
	return shot;
}


function CoronaShot(x,y,speed,angle,angv,  scale,alpha,c, del) {
	let shot = CreateShotA2(x,y,0,angle,0,0,0,0); //517
//	ObjRender_SetAlpha(shot,alpha);
	ObjRender_SetColor(shot,c[0],c[1],c[2]);
	ObjRender_SetScaleXYZ(shot,scale,scale,1);
	ObjRender_SetBlendType(shot,BLEND_ADD_ARGB);
//	ObjShot_SetSpellResist(shot,true);
	ObjMove_AddPatternA3(shot,del,0,angle,0.1,angv,speed,517);
	
	task TCoronaShot(shot,angle,angv, scale,alpha,c,del) {
		ascent(i in 0..del) {
			corona(x,y,angle+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
			yield;
		}
		ObjShot_SetIntersectionEnable(shot,true);
		while(!Obj_IsDeleted(shot)) {
			corona(ObjMove_GetX(shot),ObjMove_GetY(shot),ObjMove_GetAngle(shot)+180+rand(-30,30),scale,alpha,c); //[255,200-0.5*100/dur,255-0.25*i*100/dur]
			yield;
		}
	}
	TCoronaShot(shot,angle,angv,scale,alpha,c,del);
	return shot;
}



task Sunfire() {
	ObjRender_SetAlpha(boss,127);
	TAfterImageBoss(boss,[255,0,0],1,5,60,15,BLEND_ADD_ARGB,79);
//	TintScreen([255,0,0,127],300);
//	TintScreen([255,0,0,127],-1);
	while(!Obj_IsDeleted(boss)) {
		//AfterImageA2(cx,cy,CSD~"./img/gradientcircle.png",[255,127,127],1,1, 1,  1,1,300,300,0,BLEND_ADD_ARGB,79);	
		AfterImageCircle(ex+rand(-10,10),ey+rand(-10,10),[255,127,127,100],0.5,0.5,30,BLEND_ADD_ARGB,79);
		AfterImageCircle(ex,ey,[255,127,255,100],0.5,0.5,30,BLEND_ADD_ARGB,79);
		loop(3){
			//AfterImageCircle(ex,ey,[255,230,230,64],1,0,3,BLEND_MULTIPLY,81);
			AfterImageCircle(ex,ey,[127,64,0,255],3,0,3,BLEND_ADD_ARGB,81);
			yield;
		}
	}
}


// task WiggleShot(shot,angv,del) {
	// ObjMove_SetAngularVelocity(shot,angv);
	// wait(del/2);
	// while(!Obj_IsDeleted(shot)) {
		// angv*=-1;
		// ObjMove_SetAngularVelocity(shot,angv);
		// wait(del);
	// }
// }

// task line(y,x0,dir,gap,gapscale,del,warn,dur) {
	// let shot; let shots = [];
	// let x = x0;
	// wait(del);
	// ascent(i in 0..10) {
		// x += gap*dir + gap*dir*(gapscale*i);
		// shot = CreateShotA1(x,y,0,90, 533, 0);
		// ObjRender_SetColor(shot,200,0,128);
		// Phase2(shot,warn,0,250);
		// ObjShot_SetSpellResist(shot,true);
		// shots = shots ~ [shot];
	// }
	// wait(dur+warn);
	// ascent(i in 0..10) {
		// ObjShot_FadeDelete(shots[i]);
	// }
	
// }





// function sweep() {
	// let xmspd = -2;
	// let yspd = 2.5;
	// let turndel = 30;
	// let xmacc = 0.0725 * xmspd * (2/yspd);
	// let shot;
	// ascent(i in 0..20) {
		// shot = CreateShotB2(x0+sign(i-10)*(length/2 + i * 20),-60, 0,yspd, 0,-0.05, 0,yspd, 533, 0);
		// ObjRender_SetColor(shot,255-i*3,0,i*3);
		// Phase2(shot,45,0, 155);
		// ascent(j in 0..10) {
			// ObjMove_AddPatternB2(shot,turndel/2+j*turndel,NO_CHANGE,NO_CHANGE,xmacc*2*(j%2-0.5),NO_CHANGE,xmspd*2*(j%2-0.5),yspd+0.15*(i%2));
		// }
	// }
// }











// task TFinalize() {
	
	
	// SE_Play(spellbreak,100);
	// DeleteShotAll(TYPE_ALL, TYPE_ITEM);
// //	PPCExplode(boss,[255,255,255]); PPCExplodeRainbow(boss);
	
	// AfterImageCircle(ex,ey,[255,255,255,255],1,20,30,BLEND_ADD_ARGB,79);
		
	// wait(15);
		
	
	// Obj_Delete(boss);
	// CloseScript(GetOwnScriptID());
	// return;
	
	// //ExplosionB2(boss,"HEART",[255,100,255],[255,100,255]);
	// /*
	// //ExplodeCherry(ex,ey,0.1);
	// ExplodeRGB(ex, ey, 2, 1, 255, 255, 255);
	// DeleteShotAll(TYPE_ALL,TYPE_ITEM);
	// SE_Play(defeated,1000);
	// StopSlow(TARGET_ALL);
	// ascent(i in 0..60) {
		// ObjRender_SetAlpha(boss, 255-i*4.25);
		// yield;
	// }
	// //wait(60);
	// Obj_Delete(boss);
	
	// */
	// //CloseScript(GetOwnScriptID());
	// //return;
// }


//CreateSunShotA1(x, y, speed, angle, type, initScale, sizePerFrame, endScale, texture2, texture, r, g, b)